Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 1



1      
2                        ;******************************************************
****
3                        ;*
4                        ;* projekt: running
5                        ;*   coder: tarzan boy
6                        ;*
7                        ;******************************************************
****
8      
9         000005         int_genau equ     5
10        000000         int_genau3 equ    0
11        000000         int_genau4 equ    0
12        000001         int_genau5 equ    1
13     
14                       stack_lines_max
15        000020                   equ     32
16     
17        0000C0         points_max equ    192
18        0000C0         lines_max equ     192
19                       monsters_max
20        000020                   equ     32
21        000020         doors_max equ     32
22        000030         things_max equ    48
23        000018         schalt_max equ    24
24     
25        000040         masked_max equ    64
26     
27        001870         b_text_max equ    $1870
28                       b_boden_max
29        001200                   equ     $1200
30        000800         b_mask_max equ    $800
31     
32                       monst_pts_offi
33        0001C0                   equ     (points_max+monsters_max)*2
34                       doors_pts_offi
35        000240                   equ     monst_pts_offi+monsters_max*4
36                       things_pts_offi
37        0004A0                   equ     doors_pts_offi+doors_max*16+things_ma
x*2
38                       schalt_pts_offi
39        000560                   equ     things_pts_offi+things_max*4
40     
41        00FFE0         PBC       equ     $ffe0
42        00FFE8         HCR       equ     $ffe8
43        00FFE9         HSR       equ     $ffe9
44        00FFEB         HRX       equ     $ffeb
45        00FFEB         HTX       equ     $ffeb
46        00FFFE         BCR       equ     $fffe
47        00FFFF         IPR       equ     $ffff
48     
49     
50                       ;******************************************************
****
51                       ;***
52                       ;***            Programm-Speicher
53                       ;***
54                       ;******************************************************
****
55     
56        P:0200                   org     p:$200
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 2



57                       start
58        P:0200 0BF080            jsr     init_system
                 0009BC
59                       main_loop
60        P:0202 0BF080            jsr     reset_dsp_datas
                 0009C8
61        P:0204 0BF080            jsr     cpu_read_normal
                 000A05
62        P:0206 0BF080            jsr     shift_playfield
                 000351
63        P:0208 0BF080            jsr     rotate_playfield
                 000397
64        P:020A 0BF080            jsr     place_monsters
                 0002D8
65        P:020C 0BF080            jsr     place_things
                 00032D
66        P:020E 0BF080            jsr     kill_lines_behind
                 0003E2
67        P:0210 0BF080            jsr     sort_masked_lines
                 00021D
68        P:0212 0BF080            jsr     control_mon_entf
                 000295
69        P:0214 0BF080            jsr     kollision
                 0004E2
70        P:0216 0BF080            jsr     cpu_send_bild
                 000BCF
71        P:0218 0BF080            jsr     cpu_send_info
                 000BB5
72        P:021A 0BF080            jsr     cpu_send_new_info
                 000BBF
73     
74        P:021C 0C0202            jmp     main_loop
75     
76                       ;******************************************************
****
77     
78                       ; sortierung aller linien, die maskiert werden muessen 
...
79     
80                       ; naives sortieren
81                       ; version 1.0  vom 12.4.96, 22.00 uhr
82                       ; version 1.2  vom 26.3.97, 14.30 uhr (completly rewrit
ten)
83                       ; version 1.21 vom 28.3.97
84                       ; version 2.0  vom 30.3.97, 2.00 uhr (completly rewritt
en)
85     
86                       sort_masked_lines
87     
88        P:021D 57F400            move              #>calc_lines_i,b
                 001488
89        P:021F 56F000            move              x:calc_l_i_anz,a
                 000024
90     
91        P:0221 0BF080            jsr     sort_ml_now
                 00022A
92     
93        P:0223 57F400            move              #>calc_lines_ii,b
                 001CD0
94        P:0225 56F000            move              x:calc_l_ii_anz,a
                 000025
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 3



95     
96        P:0227 0BF080            jsr     sort_ml_now
                 00022A
97     
98        P:0229 00000C            rts
99     
100                      ;---------------
101    
102                      ; b = calc_lines
103                      ; a = anzahl lines
104    
105                      sort_ml_now
106    
107       P:022A 21C403            tst     a         a,x0                    ; k
eine linien vorhanden ?
108       P:022B 0AF0AA            jeq     smln_out
                 000294
109    
110                                                                          ; z
uerst die adressen der zu maskierenden
111                                                                          ; l
inien bestimmen und in x:strahl_buffer eintragen ...
112    
113       P:022D 63F400            move              #>strahl_buffer,r3      ; s
peicher linienadressen
                 0028DA
114    
115       P:022F 46F400            move              #>3,y0                  ; m
askflag liegt im 4. byte
                 000003
116       P:0231 47F458            add     y0,b      #>5,y1                  ; a
dresse korrigieren
                 000005
117                                                                          ; 5
 dsp-words pro linien
118       P:0233 45F413            clr     a         #>1,x1                  ; a
 = anzahl zu mask. linien
                 000001
119    
120       P:0235 06C400            do      x0,smln_find_loop
                 000240
121    
122       P:0237 21F278            add     y1,b      b,r2                    ; i
ns adressregister
123       P:0238 000000            nop                                       ; p
ointer auf naechste linie
124    
125       P:0239 0A628E            jclr    #14,x:(r2),smln_no_mask           ; m
askflag vorhanden ?
                 000240
126    
127                                                                          ; d
ie linie muss maskiert werden, adresse zuruecksetzen und eintragen ...
128                                                                          ; a
nzahl zu maskierender linien um eins erhoehen ...
129    
130       P:023B 21E460            add     x1,a      b,x0
131       P:023C 224F00            move              r2,b
132       P:023D 20005C            sub     y0,b                              ; p
ointer auf linienanfang
133       P:023E 575B00            move              b,x:(r3)+               ; u
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 4



nd eintragen
134       P:023F 208F00            move              x0,b
135    
136                      smln_no_mask
137       P:0240 000000            nop
138                      smln_find_loop
139    
140       P:0241 44F400            move              #>2,x0                  ; w
enn anzahl niedriger als
                 000002
141       P:0243 567045            cmp     x0,a      a,x:masked_anz          ; z
wei, dann keine
                 000041
142       P:0245 0AF0AF            jle     smln_out                          ; s
ortierung
                 000294
143    
144       P:0247 60F400            move              #>calc_points,r0
                 000EC8
145    
146       P:0249 20001B            clr     b
147       P:024A 577000            move              b,x:sort_i
                 000042
148    
149       P:024C 44F400            move              #>1,x0
                 000001
150       P:024E 200044            sub     x0,a
151       P:024F 21C400            move              a,x0
152    
153       P:0250 06C400            do      x0,smln_loop_i
                 000292
154    
155       P:0252 63F400            move              #>strahl_buffer,r3
                 0028DA
156       P:0254 73F000            move              x:sort_i,n3
                 000042
157       P:0256 000000            nop
158       P:0257 64EB00            move              x:(r3+n3),r4
159       P:0258 229600            move              r4,r6
160       P:0259 70E400            move              x:(r4),n0
161       P:025A 000000            nop
162       P:025B 56E800            move              x:(r0+n0),a
163       P:025C 567000            move              a,x:sort_wert
                 000044
164    
165       P:025E 56F000            move              x:sort_i,a              ; f
or j = i+1 ...
                 000042
166       P:0260 44F400            move              #>1,x0
                 000001
167       P:0262 200040            add     x0,a
168       P:0263 567000            move              a,x:sort_j
                 000043
169    
170                      smln_j_begin
171       P:0265 56F000            move              x:masked_anz,a
                 000041
172       P:0267 57F000            move              x:sort_j,b
                 000043
173       P:0269 20000D            cmp     a,b
174       P:026A 0AF0AA            jeq     smln_j_end
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 5



                 000286
175    
176       P:026C 63F400            move              #>strahl_buffer,r3
                 0028DA
177       P:026E 73F000            move              x:sort_j,n3
                 000043
178       P:0270 000000            nop
179       P:0271 65EB00            move              x:(r3+n3),r5
180       P:0272 000000            nop
181       P:0273 70E500            move              x:(r5),n0
182       P:0274 000000            nop
183       P:0275 56E800            move              x:(r0+n0),a
184    
185       P:0276 57F000            move              x:sort_wert,b
                 000044
186       P:0278 20000D            cmp     a,b
187       P:0279 0AF0A1            jge     smln_no_inner_j
                 00027E
188    
189       P:027B 567000            move              a,x:sort_wert
                 000044
190       P:027D 22B600            move              r5,r6
191    
192                      smln_no_inner_j
193    
194    
195       P:027E 56F000            move              x:sort_j,a
                 000043
196       P:0280 44F400            move              #>1,x0
                 000001
197       P:0282 200040            add     x0,a
198       P:0283 567000            move              a,x:sort_j
                 000043
199       P:0285 0C0265            jmp     smln_j_begin
200    
201                      smln_j_end
202    
203                                                                          ; v
ertauschung
204    
205       P:0286 060580            do      #5,smln_change_loop
                 00028B
206       P:0288 50E400            move              x:(r4),a0
207       P:0289 54E600            move              x:(r6),a1
208       P:028A 545C00            move              a1,x:(r4)+
209       P:028B 505E00            move              a0,x:(r6)+
210                      smln_change_loop
211    
212       P:028C 56F000            move              x:sort_i,a
                 000042
213       P:028E 44F400            move              #>1,x0
                 000001
214       P:0290 200040            add     x0,a
215       P:0291 567000            move              a,x:sort_i
                 000042
216                      smln_loop_i
217    
218       P:0293 000000            nop
219    
220                      smln_out
221    
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 6



222       P:0294 00000C            rts
223    
224    
225                      ;******************************************************
****
226    
227                      ; kontrolliert die getroffenen monster mit der
228                      ; maximalen schussentfernung ...
229    
230                      control_mon_entf
231    
232       P:0295 56F000            move              x:monsters_anz,a
                 00002F
233       P:0297 21C403            tst     a         a,x0
234       P:0298 0AF0AA            jeq     cme_out
                 0002B6
235    
236       P:029A 56F000            move              x:shoot,a               ; n
icht noetig, wenn
                 00000B
237       P:029C 200003            tst     a                                 ; k
ein schuss gefallen ist
238       P:029D 0AF0AA            jeq     cme_out
                 0002B6
239    
240       P:029F 63F400            move              #>monsters_flags,r3
                 0027B8
241       P:02A1 73F400            move              #>-1,n3
                 FFFFFF
242    
243                                                                          ; d
ie maximale schussentfernung berechnet sich
244                                                                          ; a
us min_entf (naechstgelegene wand) und shoot
245                                                                          ; (
reichweite der waffe) - je nachdem ...
246    
247       P:02A3 57F000            move              x:min_entf,b
                 000034
248       P:02A5 20000D            cmp     a,b
249       P:02A6 0AF0A9            jlt     cme_ok
                 0002A9
250       P:02A8 21CF00            move              a,b
251                      cme_ok
252       P:02A9 06C400            do      x0,cme_out
                 0002B5
253    
254       P:02AB 56DB00            move              x:(r3)+,a
255       P:02AC 0ACC17            jclr    #23,a1,cme_loop
                 0002B5
256    
257       P:02AE 0ACC57            bclr    #23,a1
258       P:02AF 218E00            move              a1,a
259       P:02B0 20000D            cmp     a,b
260       P:02B1 0AF0A7            jgt     cme_loop
                 0002B5
261    
262       P:02B3 200013            clr     a
263       P:02B4 566B00            move              a,x:(r3+n3)
264    
265                      cme_loop
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 7



266       P:02B5 000000            nop
267                      cme_out
268       P:02B6 000000            nop
269       P:02B7 00000C            rts
270    
271                      ;******************************************************
****
272    
273                      ; bei sicht von bestimmten seiten muessen bei den
274                      ; monstern die texturen horizontal gespiegelt werden.
275                      ; flag ist bit 22 von x:monsters_breite.
276                      ; ist dieses gesetzt, so anfangs und endpunkt
277                      ; vertauschen (durch vertauschen der pointer) und
278                      ; den Normalenvektor der monster-textur auf $80 setzen.
279    
280                      pm_turn_monsters
281    
282       P:02B8 56F000            move              x:monsters_anz,a
                 00002F
283       P:02BA 21C503            tst     a         a,x1
284       P:02BB 0AF0AA            jeq     pmtm_out
                 0002D6
285    
286       P:02BD 64F400            move              #>monsters_breite,r4
                 002798
287       P:02BF 46F400            move              #>5,y0
                 000005
288    
289       P:02C1 62F41B            clr     b         #>monsters_lines,r2
                 000A40
290    
291       P:02C3 06C500            do      x1,pmtm_out
                 0002D5
292    
293       P:02C5 55DC13            clr     a         x:(r4)+,b1
294       P:02C6 0ACD16            jclr    #22,b1,pmtm_no_change
                 0002D3
295    
296       P:02C8 72F400            move              #>1,n2
                 000001
297       P:02CA 50E200            move              x:(r2),a0
298       P:02CB 54EA00            move              x:(r2+n2),a1
299       P:02CC 506A00            move              a0,x:(r2+n2)
300       P:02CD 72F400            move              #>3,n2
                 000003
301       P:02CF 546200            move              a1,x:(r2)
302    
303       P:02D0 54EA00            move              x:(r2+n2),a1            ; w
inkel auf $80 setzen
304       P:02D1 0ACC77            bset    #23,a1
305       P:02D2 546A00            move              a1,x:(r2+n2)
306    
307                      pmtm_no_change
308       P:02D3 224E00            move              r2,a
309       P:02D4 200050            add     y0,a
310       P:02D5 21D200            move              a,r2
311                      pmtm_out
312       P:02D6 000000            nop
313    
314       P:02D7 00000C            rts
315    
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 8



316                      ;----
317    
318                      ; Die Standpunkte der Monster sind rotiert worden.
319                      ; Jetzt wird aus jedem dieser Stadtpunkte zwei
320                      ; Punkte erzeugt, die dann miteinander verbunden
321                      ; die Linie fuer das Monster darstellen.
322                      ; Dabei entsteht (als Abfallprodukt) die Information,
323                      ; ob die Monster-Linie die X-Achse schneidet.
324                      ; Ist ein Schuss gefallen, so ist das Monster getroffen
.
325    
326                      place_monsters
327    
328       P:02D8 0D02B8            jsr     pm_turn_monsters
329    
330       P:02D9 56F01B            clr     b         x:monsters_anz,a
                 00002F
331       P:02DB 577000            move              b,x:one_mon_hit
                 00000C
332       P:02DD 21C503            tst     a         a,x1
333       P:02DE 0AF0AA            jeq     nothing_to_place
                 00032B
334    
335       P:02E0 63F400            move              #>monsters_flags,r3
                 0027B8
336       P:02E2 64F400            move              #>monsters_breite,r4
                 002798
337    
338       P:02E4 60F400            move              #>calc_points_m,r0
                 001048
339       P:02E6 61F400            move              #>calc_points_mm,r1
                 001088
340    
341       P:02E8 06C500            do      x1,nothing_to_place
                 00032A
342    
343                                                                          ; n
utze x:p_x1 als flag fuer monster getroffen ...
344                                                                          ; a
lso anfangs loeschen ...
345    
346       P:02EA 200013            clr     a
347       P:02EB 567000            move              a,x:p_x1
                 000010
348    
349       P:02ED 44D800            move              x:(r0)+,x0              ; x
-wert
350       P:02EE 56D800            move              x:(r0)+,a               ; y
-wert
351    
352       P:02EF 45F41B            clr     b         #>$0000ff,x1
                 0000FF
353       P:02F1 576300            move              b,x:(r3)                ; m
onsters_flags loeschen
354       P:02F2 55E400            move              x:(r4),b1               ; b
reite und killed_flag
355       P:02F3 21A76E            and     x1,b      b1,y1
356       P:02F4 0608A0            rep     #3+int_genau
357       P:02F5 20003B            lsl     b
358    
359       P:02F6 445900            move              x0,x:(r1)+              ; x
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 9



-wert bleibt gleich
360       P:02F7 21C510            add     b,a       a,x1
361       P:02F8 565900            move              a,x:(r1)+               ; n
euer y1-wert
362       P:02F9 46F400            move              #>16*8*8*2*2,y0         ; -
> int_genau 5 = *2*2
                 001000
363       P:02FB 200057            cmpm    y0,a
364       P:02FC 0AF0A1            jge     pm_nocase_1
                 000300
365       P:02FE 0A7020            bset    #0,x:p_x1
                 000010
366                      pm_nocase_1
367    
368       P:0300 20ED00            move              y1,b1
369       P:0301 47F400            move              #>$ff00,y1
                 00FF00
370       P:0303 21C67E            and     y1,b      a,y0
371       P:0304 20AE00            move              x1,a                    ; -
> int_genau = 5 -> kein lsr b
372       P:0305 445900            move              x0,x:(r1)+              ; /
 x-wert bleibt gleich
373       P:0306 208714            sub     b,a       x0,y1                   ; x
-wert zwischenspeichern
374       P:0307 45F400            move              #>16*8*8*2*2,x1
                 001000
375       P:0309 200067            cmpm    x1,a
376       P:030A 0AF0A1            jge     pm_nocase_2
                 00030E
377       P:030C 0A7020            bset    #0,x:p_x1
                 000010
378                      pm_nocase_2
379    
380                                                                          ; w
enn monster bereits tot, dann kein_treffer
381    
382       P:030E 57DC00            move              x:(r4)+,b               ; k
illed_flag (bit #23)
383       P:030F 56590B            tst     b         a,x:(r1)+               ; /
 neuer y2-wert
384       P:0310 0AF0AB            jmi     kein_treffer
                 000325
385    
386                                                                          ; x
-wert testen - wenn negativ, dann kein_treffer
387    
388       P:0312 208F00            move              x0,b
389       P:0313 21C40B            tst     b         a,x0
390       P:0314 0AF0AB            jmi     kein_treffer
                 000325
391    
392                                                                          ; m
ultiplikation der beiden y-werte,
393                                                                          ; w
enn negativ (y1>0, y2<0 o.u.), dann treffer
394    
395       P:0316 2000D0            mpy     x0,y0,a
396       P:0317 0AF0A3            jpl     kein_treffer
                 000325
397                      treffer
398       P:0319 56F000            move              x:shoot,a
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 10



                 00000B
399       P:031B 44F403            tst     a         #>1,x0
                 000001
400       P:031D 0AF0AA            jeq     kein_treffer_out
                 000327
401    
402       P:031F 0ACD77            bset    #23,b1                            ; b
it #23 setzen
403       P:0320 555B00            move              b1,x:(r3)+
404       P:0321 447000            move              x0,x:one_mon_hit
                 00000C
405       P:0323 0AF080            jmp     testing_go_on
                 00032A
406    
407                      kein_treffer
408       P:0325 0A10A0            jset    #0,x:p_x1,treffer
                 000319
409    
410                      kein_treffer_out
411       P:0327 20EF00            move              y1,b
412       P:0328 0ACD57            bclr    #23,b1
413       P:0329 555B00            move              b1,x:(r3)+
414    
415                      testing_go_on
416       P:032A 000000            nop
417    
418                      nothing_to_place
419    
420       P:032B 000000            nop
421    
422       P:032C 00000C            rts
423    
424    
425                      ;******************************************************
****
426    
427                      place_things
428       P:032D 56F000            move              x:things_anz,a
                 00003D
429       P:032F 21C403            tst     a         a,x0
430       P:0330 0AF0AA            jeq     noth_to_place
                 00034F
431    
432       P:0332 60F400            move              #>calc_points_g,r0
                 001308
433       P:0334 61F400            move              #>calc_points_gg,r1
                 001368
434       P:0336 62F400            move              #>things_lines+4,r2
                 000D64
435       P:0338 45F400            move              #>5,x1
                 000005
436    
437       P:033A 06C400            do      x0,noth_to_place
                 00034E
438    
439       P:033C 44D800            move              x:(r0)+,x0              ; x
-wert
440       P:033D 56D800            move              x:(r0)+,a               ; y
-wert
441    
442       P:033E 47F41B            clr     b         #>$ff,y1
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 11



                 0000FF
443       P:0340 51E200            move              x:(r2),b0
444       P:0341 0608A0            rep     #8
445       P:0342 20003A            asl     b
446       P:0343 46F47E            and     y1,b      #>1,y0
                 000001
447       P:0345 445958            add     y0,b      x0,x:(r1)+              ; /
 x-wert bleibt gleich
448       P:0346 0609A0            rep     #4+int_genau
449       P:0347 20003B            lsl     b
450       P:0348 21A700            move              b1,y1
451    
452       P:0349 21CF70            add     y1,a      a,b
453       P:034A 565900            move              a,x:(r1)+               ; n
euer y1-wert
454    
455       P:034B 44597C            sub     y1,b      x0,x:(r1)+              ; /
 x-wert bleibt gleich
456    
457       P:034C 224E00            move              r2,a
458       P:034D 575960            add     x1,a      b,x:(r1)+               ; /
 neuer y2-wert
459       P:034E 21D200            move              a,r2
460    
461                      noth_to_place
462    
463       P:034F 000000            nop
464    
465       P:0350 00000C            rts
466    
467                      ;******************************************************
****
468    
469                      shift_playfield
470       P:0351 44F000            move              x:sx,x0
                 000004
471       P:0353 46F000            move              x:sy,y0
                 000005
472    
473       P:0355 45F000            move              x:points_anz,x1
                 000022
474    
475       P:0357 60F400            move              #>points,r0
                 000200
476       P:0359 61F400            move              #>calc_points,r1
                 000EC8
477    
478       P:035B 0BF080            jsr     shift_now
                 00038F
479    
480       P:035D 56F000            move              x:doors_anz,a
                 000035
481       P:035F 200003            tst     a
482       P:0360 0AF0AA            jeq     no_doors_shift
                 00036B
483    
484       P:0362 0603A0            rep     #3
485       P:0363 200033            lsl     a
486       P:0364 21C500            move              a,x1                    ; 1
 door = 8 punkte
487    
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 12



488       P:0365 60F400            move              #>points_doors,r0
                 0003C0
489       P:0367 61F400            move              #>calc_points_d,r1
                 001108
490    
491       P:0369 0BF080            jsr     shift_now
                 00038F
492    
493                      no_doors_shift
494       P:036B 56F000            move              x:monsters_anz,a
                 00002F
495       P:036D 21C503            tst     a         a,x1
496       P:036E 0AF0AA            jeq     no_monsters_shift
                 000376
497    
498       P:0370 60F400            move              #>points_monsters,r0
                 000380
499       P:0372 61F400            move              #>calc_points_m,r1
                 001048
500    
501       P:0374 0BF080            jsr     shift_now
                 00038F
502    
503                      no_monsters_shift
504       P:0376 56F000            move              x:things_anz,a
                 00003D
505       P:0378 21C503            tst     a         a,x1
506       P:0379 0AF0AA            jeq     no_things_shift
                 000381
507    
508       P:037B 60F400            move              #>points_things,r0
                 0005C0
509       P:037D 61F400            move              #>calc_points_g,r1
                 001308
510    
511       P:037F 0BF080            jsr     shift_now
                 00038F
512    
513                      no_things_shift
514       P:0381 56F000            move              x:schalt_anz,a
                 000039
515       P:0383 200003            tst     a
516       P:0384 0AF0AA            jeq     no_schalt_shift
                 00038D
517    
518       P:0386 60F433            lsl     a         #>points_schalt,r0
                 000620
519       P:0388 21C500            move              a,x1
520       P:0389 61F400            move              #>calc_points_s,r1
                 001428
521    
522       P:038B 0BF080            jsr     shift_now
                 00038F
523    
524                      no_schalt_shift
525       P:038D 000000            nop
526    
527       P:038E 00000C            rts
528    
529                      ;------
530    
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 13



531                      ; x1 = anzahl an punkten (x/y)
532                      ; x0 = sx
533                      ; y0 = sy
534                      ; r0 = von hier
535                      ; r1 = nach hier
536    
537                      shift_now
538       P:038F 06C500            do      x1,shift_loop
                 000394
539    
540       P:0391 56D800            move              x:(r0)+,a
541       P:0392 57D844            sub     x0,a      x:(r0)+,b
542       P:0393 56595C            sub     y0,b      a,x:(r1)+
543       P:0394 575900            move              b,x:(r1)+
544                      shift_loop
545       P:0395 000000            nop
546    
547       P:0396 00000C            rts
548    
549                      ;******************************************************
****
550    
551                      rotate_playfield
552       P:0397 71F400            move              #>$1,n1
                 000001
553       P:0399 62F400            move              #>$100,r2
                 000100
554    
555       P:039B 44F000            move              x:alpha,x0
                 000007
556       P:039D 56F400            move              #>$100,a
                 000100
557       P:039F 45F444            sub     x0,a      #>$ff,x1
                 0000FF
558       P:03A1 44F466            and     x1,a      #>$40,x0
                 000040
559       P:03A3 21DA00            move              a,n2
560       P:03A4 200040            add     x0,a
561       P:03A5 4EEA66            and     x1,a                  y:(r2+n2),y0 ;w
si
562       P:03A6 21DA00            move              a,n2
563       P:03A7 44F000            move              x:points_anz,x0
                 000022
564       P:03A9 4FEA00            move                          y:(r2+n2),y1 ;w
co
565    
566       P:03AA 61F400            move              #>calc_points,r1
                 000EC8
567    
568       P:03AC 0BF080            jsr     rotate_now
                 0003D8
569    
570       P:03AE 56F000            move              x:doors_anz,a
                 000035
571       P:03B0 200003            tst     a
572       P:03B1 0AF0AA            jeq     no_doors_rot
                 0003BA
573    
574       P:03B3 0603A0            rep     #3
575       P:03B4 200033            lsl     a
576       P:03B5 21C400            move              a,x0                    ; 1
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 14



 door = 8 punkte
577    
578       P:03B6 61F400            move              #>calc_points_d,r1
                 001108
579    
580       P:03B8 0BF080            jsr     rotate_now
                 0003D8
581    
582                      no_doors_rot
583       P:03BA 56F000            move              x:monsters_anz,a
                 00002F
584       P:03BC 21C403            tst     a         a,x0
585       P:03BD 0AF0AA            jeq     no_monsters_rot
                 0003C3
586    
587       P:03BF 61F400            move              #>calc_points_m,r1
                 001048
588    
589       P:03C1 0BF080            jsr     rotate_now
                 0003D8
590    
591                      no_monsters_rot
592       P:03C3 56F000            move              x:things_anz,a
                 00003D
593       P:03C5 21C403            tst     a         a,x0
594       P:03C6 0AF0AA            jeq     no_things_rot
                 0003CC
595    
596       P:03C8 61F400            move              #>calc_points_g,r1
                 001308
597    
598       P:03CA 0BF080            jsr     rotate_now
                 0003D8
599    
600                      no_things_rot
601       P:03CC 56F000            move              x:schalt_anz,a
                 000039
602       P:03CE 200003            tst     a
603       P:03CF 0AF0AA            jeq     no_schalt_rot
                 0003D6
604    
605       P:03D1 61F433            lsl     a         #>calc_points_s,r1
                 001428
606       P:03D3 21C400            move              a,x0
607    
608       P:03D4 0BF080            jsr     rotate_now
                 0003D8
609    
610                      no_schalt_rot
611       P:03D6 000000            nop
612    
613       P:03D7 00000C            rts
614    
615                      ;------
616    
617                      ; x0 = anzahl an punkten (x/y)
618                      ; y0 = sinus
619                      ; y1 = cosinus
620                      ; r1 = calc_points
621    
622                      rotate_now
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 15



623       P:03D8 06C400            do      x0,rotate_loop
                 0003DF
624    
625       P:03DA 44E100            move              x:(r1),x0               ;x
626       P:03DB 45E9C0            mpy     x0,y1,a   x:(r1+n1),x1            ;y
627       P:03DC 2000E7            macr    -x1,y0,a
628       P:03DD 2000D8            mpy     x0,y0,b
629       P:03DE 5659FB            macr    x1,y1,b   a,x:(r1)+
630       P:03DF 575900            move              b,x:(r1)+
631    
632                      rotate_loop
633       P:03E0 000000            nop
634    
635       P:03E1 00000C            rts
636    
637                      ;******************************************************
****
638    
639                      kill_lines_behind
640       P:03E2 64F400            move              #>calc_lines_i,r4
                 001488
641       P:03E4 65F400            move              #>calc_lines_ii,r5
                 001CD0
642       P:03E6 66F400            move              #>reg_retten,r6
                 0028DA
643       P:03E8 56F400            move              #>$7fffff,a
                 7FFFFF
644       P:03EA 567000            move              a,x:min_entf
                 000034
645    
646       P:03EC 56F000            move              x:alpha,a
                 000007
647       P:03EE 57F400            move              #>$100,b
                 000100
648       P:03F0 20001C            sub     a,b
649       P:03F1 0610A0            rep     #16
650       P:03F2 20003B            lsl     b
651       P:03F3 21A700            move              b1,y1
652    
653       P:03F4 44F400            move              #>$0,x0
                 000000
654       P:03F6 208500            move              x0,x1
655       P:03F7 447000            move              x0,x:mon_line_flag
                 00000D
656    
657       P:03F9 60F400            move              #>calc_points,r0
                 000EC8
658       P:03FB 61F400            move              #>calc_points+1,r1
                 000EC9
659       P:03FD 62F400            move              #>lines,r2
                 000680
660       P:03FF 46F000            move              x:lines_anz,y0
                 000023
661    
662       P:0401 0BF080            jsr     kill_now
                 000436
663    
664       P:0403 56F000            move              x:doors_anz,a
                 000035
665       P:0405 200003            tst     a
666       P:0406 0AF0AA            jeq     no_doors
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 16



                 00040F
667    
668       P:0408 200033            lsl     a
669       P:0409 200033            lsl     a
670       P:040A 21C600            move              a,y0
671    
672       P:040B 62F400            move              #>doors_lines,r2
                 000AE0
673    
674       P:040D 0BF080            jsr     kill_now
                 000436
675                      no_doors
676       P:040F 56F000            move              x:monsters_anz,a
                 00002F
677       P:0411 21C603            tst     a         a,y0
678       P:0412 0AF0AA            jeq     no_monsters
                 00041C
679    
680       P:0414 62F400            move              #>monsters_lines,r2
                 000A40
681    
682       P:0416 56F400            move              #>1,a
                 000001
683       P:0418 567000            move              a,x:mon_line_flag
                 00000D
684       P:041A 0BF080            jsr     kill_now
                 000436
685                      no_monsters
686       P:041C 56F000            move              x:things_anz,a
                 00003D
687       P:041E 21C603            tst     a         a,y0
688       P:041F 0AF0AA            jeq     no_things
                 000428
689    
690       P:0421 200013            clr     a
691       P:0422 567000            move              a,x:mon_line_flag
                 00000D
692       P:0424 62F400            move              #>things_lines,r2
                 000D60
693    
694       P:0426 0BF080            jsr     kill_now
                 000436
695                      no_things
696       P:0428 56F000            move              x:schalt_anz,a
                 000039
697       P:042A 21C603            tst     a         a,y0
698       P:042B 0AF0AA            jeq     no_schalt
                 000431
699    
700       P:042D 62F400            move              #>schalt_lines,r2
                 000E50
701    
702       P:042F 0BF080            jsr     kill_now
                 000436
703                      no_schalt
704       P:0431 447000            move              x0,x:calc_l_i_anz
                 000024
705       P:0433 457000            move              x1,x:calc_l_ii_anz
                 000025
706    
707       P:0435 00000C            rts
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 17



708    
709                      ;---------------
710    
711                      ;* r0: calc_points
712                      ;* r1: calc_points+1
713                      ;* r2: xxx_lines
714    
715                      ;* r4: calc_lines_i
716                      ;* r5: calc_lines_ii
717    
718                      ;* x0: anzahl calc_lines_i
719                      ;* x1: anzahl calc_lines_ii
720                      ;* y0: anzahl xxx_lines
721                      ;* y1: alpha_offset
722    
723                      kill_now
724       P:0436 06C600            do      y0,kill_loop
                 0004DF
725    
726       P:0438 46DA00            move              x:(r2)+,y0
727       P:0439 467000            move              y0,x:koll_counter
                 00000E
728       P:043B 20D800            move              y0,n0
729       P:043C 231900            move              n0,n1
730       P:043D 57E800            move              x:(r0+n0),b             ;x1
731       P:043E 231A0B            tst     b         n0,n2
732       P:043F 0AF0AB            jmi     anf_behind
                 0004D6
733    
734                      anf_in_front
735       P:0441 57E900            move              x:(r1+n1),b             ;y1
736       P:0442 20000B            tst     b
737       P:0443 0AF0AB            jmi     anf_sector_2
                 000462
738    
739                      anf_sector_1
740       P:0445 46DA00            move              x:(r2)+,y0
741       P:0446 467000            move              y0,x:make_counter
                 00000F
742       P:0448 20D900            move              y0,n1
743       P:0449 000000            nop
744       P:044A 57E900            move              x:(r1+n1),b
745       P:044B 20000B            tst     b
746       P:044C 0AF0AB            jmi     its_sector_3
                 00047F
747    
748                      its_sector_1
749       P:044E 46F000            move              x:koll_counter,y0
                 00000E
750       P:0450 465C00            move              y0,x:(r4)+
751       P:0451 46F000            move              x:make_counter,y0
                 00000F
752       P:0453 465C00            move              y0,x:(r4)+
753       P:0454 208E00            move              x0,a
754       P:0455 57F400            move              #>$1,b
                 000001
755       P:0457 200010            add     b,a                               ;n1
,x:(r4)+
756       P:0458 21C400            move              a,x0
757       P:0459 56DA00            move              x:(r2)+,a
758       P:045A 565C00            move              a,x:(r4)+
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 18



759       P:045B 56DA00            move              x:(r2)+,a
760       P:045C 200070            add     y1,a
761       P:045D 545C00            move              a1,x:(r4)+
762       P:045E 56DA00            move              x:(r2)+,a
763       P:045F 565C00            move              a,x:(r4)+
764       P:0460 0AF080            jmp     next_line
                 0004DF
765    
766                      anf_sector_2
767       P:0462 46DA00            move              x:(r2)+,y0
768       P:0463 467000            move              y0,x:make_counter
                 00000F
769       P:0465 20D900            move              y0,n1
770       P:0466 000000            nop
771       P:0467 57E900            move              x:(r1+n1),b             ;y2
772       P:0468 20000B            tst     b
773       P:0469 0AF0A3            jpl     its_sector_3
                 00047F
774    
775                      its_sector_2
776       P:046B 46F000            move              x:koll_counter,y0
                 00000E
777       P:046D 465D00            move              y0,x:(r5)+
778       P:046E 46F000            move              x:make_counter,y0
                 00000F
779       P:0470 465D00            move              y0,x:(r5)+
780    
781       P:0471 20AE00            move              x1,a
782       P:0472 57F400            move              #>$1,b
                 000001
783       P:0474 200010            add     b,a
784       P:0475 21C500            move              a,x1
785       P:0476 56DA00            move              x:(r2)+,a
786       P:0477 565D00            move              a,x:(r5)+
787       P:0478 56DA00            move              x:(r2)+,a
788       P:0479 200070            add     y1,a
789       P:047A 545D00            move              a1,x:(r5)+
790       P:047B 56DA00            move              x:(r2)+,a
791       P:047C 565D00            move              a,x:(r5)+
792       P:047D 0AF080            jmp     next_line
                 0004DF
793    
794                      its_sector_3
795       P:047F 445E00            move              x0,x:(r6)+
796       P:0480 455E00            move              x1,x:(r6)+
797       P:0481 475E00            move              y1,x:(r6)+
798       P:0482 72F400            move              #>1,n2
                 000001
799    
800       P:0484 46F000            move              x:koll_counter,y0
                 00000E
801       P:0486 20D800            move              y0,n0
802       P:0487 20D900            move              y0,n1
803       P:0488 465C00            move              y0,x:(r4)+
804       P:0489 465D00            move              y0,x:(r5)+
805       P:048A 44E800            move              x:(r0+n0),x0            ; x
1
806       P:048B 45E900            move              x:(r1+n1),x1            ; y
1
807    
808       P:048C 46F000            move              x:make_counter,y0
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 19



                 00000F
809       P:048E 20D800            move              y0,n0
810       P:048F 20D900            move              y0,n1
811       P:0490 465C00            move              y0,x:(r4)+
812       P:0491 465D00            move              y0,x:(r5)+
813    
814       P:0492 56F01B            clr     b         x:sh,a
                 000006
815       P:0494 55E223            lsr     a         x:(r2),b1
816       P:0495 46F423            lsr     a         #>$ff,y0
                 0000FF
817       P:0497 20005E            and     y0,b
818       P:0498 20000D            cmp     a,b
819       P:0499 0AF0A7            jgt     klb_no_min_fnd
                 0004C2
820    
821       P:049B 55EA00            move              x:(r2+n2),b1
822       P:049C 0ACD2E            jset    #14,b1,klb_no_min_fnd
                 0004C2
823       P:049E 20005E            and     y0,b
824       P:049F 20000D            cmp     a,b
825       P:04A0 0AF0A9            jlt     klb_no_min_fnd
                 0004C2
826    
827       P:04A2 56E800            move              x:(r0+n0),a             ; x
2
828       P:04A3 57E900            move              x:(r1+n1),b             ; y
2
829    
830       P:04A4 200044            sub     x0,a                              ; d
x
831       P:04A5 21C66C            sub     x1,b      a,y0                    ; d
y
832       P:04A6 21E73E            neg     b         b,y1
833    
834       P:04A7 2000E0            mpy     x1,y0,a
835       P:04A8 2000C6            mac     -x0,y1,a
836       P:04A9 21E422            asr     a         b,x0
837    
838       P:04AA 20000B            tst     b
839       P:04AB 0AF0A3            jpl     klb_div_go_on
                 0004AE
840       P:04AD 200036            neg     a
841                      klb_div_go_on
842       P:04AE 00FEB9            andi    #$fe,ccr
843       P:04AF 200032            asl     a
844       P:04B0 0618A0            rep     #24
845       P:04B1 018040            div     x0,a
846    
847       P:04B2 210F00            move              a0,b
848       P:04B3 20000B            tst     b
849       P:04B4 0AF0AB            jmi     klb_no_min_fnd
                 0004C2
850       P:04B6 56F000            move              x:mon_line_flag,a
                 00000D
851       P:04B8 200003            tst     a
852       P:04B9 0AF0A2            jne     klb_no_min_fnd
                 0004C2
853       P:04BB 56F000            move              x:min_entf,a
                 000034
854       P:04BD 200005            cmp     b,a
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 20



855       P:04BE 0AF0AF            jle     klb_no_min_fnd
                 0004C2
856       P:04C0 577000            move              b,x:min_entf
                 000034
857                      klb_no_min_fnd
858    
859       P:04C2 47FE00            move              x:-(r6),y1
860       P:04C3 45FE00            move              x:-(r6),x1
861       P:04C4 44FE00            move              x:-(r6),x0
862    
863       P:04C5 57F400            move              #>1,b
                 000001
864       P:04C7 21EE48            add     x0,b      b,a
865       P:04C8 21E460            add     x1,a      b,x0
866       P:04C9 21C500            move              a,x1
867       P:04CA 56DA00            move              x:(r2)+,a
868       P:04CB 565C00            move              a,x:(r4)+
869       P:04CC 565D00            move              a,x:(r5)+
870       P:04CD 56DA00            move              x:(r2)+,a
871       P:04CE 200070            add     y1,a
872       P:04CF 545C00            move              a1,x:(r4)+
873       P:04D0 545D00            move              a1,x:(r5)+
874       P:04D1 56DA00            move              x:(r2)+,a
875       P:04D2 565C00            move              a,x:(r4)+
876       P:04D3 565D00            move              a,x:(r5)+
877       P:04D4 0AF080            jmp     next_line
                 0004DF
878    
879       P:04D6 70E200  anf_behind move             x:(r2),n0
880       P:04D7 000000            nop
881       P:04D8 57E800            move              x:(r0+n0),b             ;x2
882       P:04D9 23580B            tst     b         n2,n0
883       P:04DA 0E3441            jpl     anf_in_front
884    
885       P:04DB 70DA00            move              x:(r2)+,n0
886       P:04DC 70DA00            move              x:(r2)+,n0
887       P:04DD 70DA00            move              x:(r2)+,n0
888       P:04DE 70DA00            move              x:(r2)+,n0
889    
890                      next_line
891       P:04DF 000000            nop
892                      kill_loop
893       P:04E0 000000            nop
894    
895       P:04E1 00000C            rts
896    
897                      ;******************************************************
****
898    
899                      ;* r0: bild (RESERVIERT!)
900                      ;* r1: strahl_buffer (RESERVIERT!)
901    
902                      kollision
903       P:04E2 60F400            move              #>bild,r0
                 000C90
904       P:04E4 56F400            move              #>bild_boden,a
                 002500
905       P:04E6 567000            move              a,x:bild_boden_pos
                 00002D
906       P:04E8 56F400            move              #>bild_mask,a
                 003700
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 21



907       P:04EA 567000            move              a,x:bild_mask_pos
                 00002E
908    
909       P:04EC 62F400            move              #>calc_points,r2
                 000EC8
910       P:04EE 63F400            move              #>calc_points+1,r3
                 000EC9
911    
912       P:04F0 65F41B            clr     b         #>tangens_tab,r5
                 002658
913       P:04F2 577000            move              b,x:koll_counter
                 00000E
914                      strahl_loop
915       P:04F4 61F413            clr     a         #>strahl_buffer,r1
                 0028DA
916       P:04F6 567000            move              a,x:strahl_buffer_anz
                 00002C
917       P:04F8 617000            move              r1,x:strahl_buffer_free
                 00002B
918    
919       P:04FA 56F000            move              x:width,a
                 000000
920       P:04FC 200023            lsr     a
921       P:04FD 21FD05            cmp     b,a       b,n5
922       P:04FE 0AF0A9            jlt     winkel_positiv
                 00050B
923    
924                      winkel_negativ
925       P:0500 56F000            move              x:calc_l_ii_anz,a
                 000025
926       P:0502 21C403            tst     a         a,x0
927       P:0503 0AF0AA            jeq     part_ende
                 000514
928    
929       P:0505 64F400            move              #>calc_lines_ii,r4
                 001CD0
930       P:0507 0BF080            jsr     part_kollision
                 000520
931    
932       P:0509 0AF080            jmp     part_ende
                 000514
933    
934                      winkel_positiv
935       P:050B 56F000            move              x:calc_l_i_anz,a
                 000024
936       P:050D 21C403            tst     a         a,x0
937       P:050E 0AF0AA            jeq     part_ende
                 000514
938    
939       P:0510 64F400            move              #>calc_lines_i,r4
                 001488
940       P:0512 0BF080            jsr     part_kollision
                 000520
941    
942                      part_ende
943       P:0514 0BF080            jsr     make_bild_entry
                 0008D6
944    
945       P:0516 44F400            move              #>1,x0
                 000001
946       P:0518 57F000            move              x:koll_counter,b
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 22



                 00000E
947       P:051A 44F048            add     x0,b      x:width,x0
                 000000
948       P:051C 57704D            cmp     x0,b      b,x:koll_counter
                 00000E
949       P:051E 0E94F4            jlt     strahl_loop
950    
951       P:051F 00000C            rts
952    
953                      ;******************************************************
****
954    
955                      ;* r0: bild (RESERVIERT!)
956                      ;* r1: strahl_buffer (RESERVIERT!)
957                      ;* r2: calc_points (anfang)
958                      ;* r3: calc_points+1 (anfang)
959                      ;* r4: calc_lines (je nach sektor)
960                      ;* r5: tangens_tab
961                      ;* r6: winkel_320_tab
962                      ;* r7: used for make_entry
963    
964                      part_kollision
965       P:0520 46F400            move              #>$7fffff,y0
                 7FFFFF
966       P:0522 467000            move              y0,x:entfernung_max
                 000050
967    
968       P:0524 66F400            move              #>winkel_320_tab,r6
                 002518
969       P:0526 23BE00            move              n5,n6
970    
971       P:0527 06C400            do      x0,kollision_loop
                 000667
972    
973    
974                                                                          ; z
uallererst feststellen, welche seite der textur ueberhaupt
975                                                                          ; g
etroffen wird bzw. ob diese seite dann ueberhaupt sichtbar ist.
976                                                                          ; d
azu wird lediglich line_flag_2 benoetigt ...
977    
978       P:0529 45F413            clr     a         #>$ffff00,x1
                 FFFF00
979       P:052B 74F400            move              #>3,n4
                 000003
980       P:052D 567000            move              a,x:flag
                 000021
981       P:052F 50EC00            move              x:(r4+n4),a0            ; l
ine_flag_2
982       P:0530 507000            move              a0,x:line_flag_2
                 000029
983    
984       P:0532 0608A0            rep     #8
985       P:0533 200032            asl     a                                 ; a
[7..0] = normw
986       P:0534 0ACC07            jclr    #7,a1,bit_null
                 000537
987       P:0536 200060            add     x1,a
988       P:0537 44EE00  bit_null  move              x:(r6+n6),x0            ;wi
nkel fr strahl
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 23



989       P:0538 45F444            sub     x0,a      #>$40,x1                ;a 
= normw - sw
                 000040
990       P:053A 200067            cmpm    x1,a
991       P:053B 0AF0AF            jle     vorderseite
                 000543
992    
993       P:053D 0A7023            bset    #3,x:flag
                 000021
994       P:053F 0A29A9            jset    #9,x:line_flag_2,text_sichtbar
                 00054C
995       P:0541 0AF080            jmp     pk_pre_out
                 000545
996    
997                      vorderseite
998       P:0543 0A29A8            jset    #8,x:line_flag_2,text_sichtbar
                 00054C
999    
1000                     pk_pre_out
1001      P:0545 228E00            move              r4,a
1002      P:0546 44F400            move              #>5,x0
                 000005
1003      P:0548 200040            add     x0,a
1004      P:0549 21D400            move              a,r4
1005      P:054A 0AF080            jmp     strahl_vorbei
                 000667
1006   
1007   
1008                     text_sichtbar
1009   
1010                                                                         ; d
ie seite die der strahl eventuell trifft, ist
1011                                                                         ; a
lso auf jeden fall sichtbar ...
1012   
1013      P:054C 44DC00            move              x:(r4)+,x0              ; b
odenfarben enthalten ...
1014      P:054D 447000            move              x0,x:point1             ; d
eshalb in 24bit register !!!
                 000026
1015      P:054F 209A00            move              x0,n2
1016      P:0550 235B00            move              n2,n3
1017      P:0551 46EA00            move              x:(r2+n2),y0            ;x1
1018      P:0552 47EB00            move              x:(r3+n3),y1            ;y1
1019   
1020      P:0553 44DC00            move              x:(r4)+,x0
1021      P:0554 447000            move              x0,x:point2
                 000027
1022      P:0556 209A00            move              x0,n2
1023      P:0557 235B00            move              n2,n3
1024      P:0558 56EA00            move              x:(r2+n2),a             ;x2
1025   
1026      P:0559 57EB55            cmp     y0,a      x:(r3+n3),b             ;y2
1027      P:055A 0AF0A1            jge     no_change_points
                 000564
1028   
1029      P:055C 20C500            move              y0,x1                   ;ex
g y0,a
1030      P:055D 21C600            move              a,y0
1031      P:055E 20AE00            move              x1,a
1032      P:055F 20E500            move              y1,x1                   ;ex
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 24



g y1,b
1033      P:0560 21E700            move              b,y1
1034      P:0561 20AF00            move              x1,b
1035      P:0562 0A7021            bset    #1,x:flag
                 000021
1036   
1037                     no_change_points
1038      P:0564 567054            sub     y0,a      a,x:p_x2                ;dx
 // end_x
                 000011
1039      P:0566 57707C            sub     y1,b      b,x:p_y2                ;dy
 // end_y
                 000013
1040   
1041      P:0568 44ED0F            cmpm    a,b       x:(r5+n5),x0            ;ta
n
1042      P:0569 0BF0A7            jsgt    set_steile_flag
                 0006C0
1043   
1044                                                                         ; -
----------------------------
1045                                                                         ; c
alc_entf
1046                                                                         ; -
----------------------------
1047   
1048                                                                         ;  
            y1 * dx - x1 * dy
1049                                                                         ;  
      xs = -------------------
1050                                                                         ;  
              tan * dx - dy
1051   
1052      P:056B 21C500            move              a,x1                    ;dx
1053   
1054      P:056C 2000A1            mpyr    x0,x1,a                           ;ta
n * dx // texture
1055      P:056D 21E414            sub     b,a       b,x0                    ;a 
= tan * dx - dy
1056   
1057      P:056E 4570F8            mpy     x1,y1,b   x1,x:p_dx               ;y1
 * dx
                 000014
1058      P:0570 2085DE            mac     -x0,y0,b  x0,x1                   ;b 
- x1 * dy // dy
1059      P:0571 21C42A            asr     b         a,x0                    ;Z
hler jetzt in b0 (!)
1060   
1061      P:0572 457003            tst     a         x1,x:p_dy
                 000015
1062      P:0574 0AF0A3            jpl     ce_div_go_on
                 000577
1063   
1064      P:0576 20003E            neg     b
1065   
1066                     ce_div_go_on
1067      P:0577 00FEB9            andi    #$fe,ccr
1068      P:0578 45DC3A            asl     b         x:(r4)+,x1              ; n
eed perh. carry bit (!)
1069      P:0579 0618A0            rep     #24
1070      P:057A 018048            div     x0,b
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 25



1071   
1072      P:057B 457000            move              x1,x:line_flag_1
                 000028
1073      P:057D 44DC00            move              x:(r4)+,x0
1074      P:057E 447000            move              x0,x:line_flag_2
                 000029
1075      P:0580 45DC00            move              x:(r4)+,x1
1076   
1077      P:0581 212E00            move              b0,a                    ; e
ntf
1078      P:0582 567003            tst     a         a,x:entf
                 00001F
1079      P:0584 0AF0AB            jmi     strahl_vorbei
                 000667
1080      P:0586 0AF0AA            jeq     strahl_vorbei
                 000667
1081   
1082      P:0588 44F000            move              x:entfernung_max,x0
                 000050
1083      P:058A 457045            cmp     x0,a      x1,x:line_flag_3
                 00002A
1084      P:058C 0AF0A7            jgt     strahl_vorbei
                 000667
1085   
1086      P:058E 0A21A0            jset    #0,x:flag,steile_linie
                 000682
1087      P:0590 0AF080            jmp     flache_linie
                 0006C5
1088   
1089   
1090                     entry_vorbereiten
1091   
1092                                                                         ; -
----------------------------
1093                                                                         ; c
alc_height
1094                                                                         ; -
----------------------------
1095   
1096      P:0592 45F413            clr     a         #>$ffff,x1              ; /
 fuer calc_zoom_and_xyoffi
                 00FFFF
1097      P:0594 567000            move              a,x:yind                ; g
leichzeitig yind loeschen
                 00001C
1098      P:0596 50F000            move              x:per,a0
                 000008
1099      P:0598 44F032            asl     a         x:entf,x0
                 00001F
1100      P:059A 57F432            asl     a         #>2,b                   ; /
 fuer calc_zoom_and_xyoffi
                 000002
1101      P:059C 0618A0            rep     #24
1102      P:059D 018040            div     x0,a
1103      P:059E 507000            move              a0,x:c_heigth
                 000016
1104   
1105                                                                         ; -
----------------------------
1106                                                                         ; c
alc_zoom_and_xyoffi
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 26



1107                                                                         ; -
----------------------------
1108   
1109      P:05A0 44F013            clr     a         x:c_heigth,x0
                 000016
1110      P:05A2 00FEB9            andi    #$fe,ccr
1111      P:05A3 0618A0            rep     #24
1112      P:05A4 018048            div     x0,b
1113   
1114      P:05A5 54F000            move              x:line_flag_3,a1        ; a
 ist komplett null
                 00002A
1115      P:05A7 517066            and     x1,a      b0,x:zoom
                 00001D
1116      P:05A9 547000            move              a1,x:xyoffi
                 000020
1117   
1118                                                                         ; -
----------------------------
1119                                                                         ; c
alc_h1_h2
1120                                                                         ; -
----------------------------
1121   
1122                                                                         ; i
mmernoch:  x0 = c_heigth
1123   
1124      P:05AB 45F000            move              x:sh,x1
                 000006
1125      P:05AD 57F0A0            mpy     x0,x1,a   x:heigth_d2,b
                 000002
1126      P:05AF 060AA0            rep     #10
1127      P:05B0 200022            asr     a
1128      P:05B1 210500            move              a0,x1
1129      P:05B2 54F06C            sub     x1,b      x:line_flag_1,a1
                 000028
1130   
1131      P:05B4 45F400            move              #>$ff,x1
                 0000FF
1132      P:05B6 200066            and     x1,a1
1133      P:05B7 218600            move              a1,y0
1134      P:05B8 2000D0            mpy     x0,y0,a
1135      P:05B9 0608A0            rep     #8
1136      P:05BA 200022            asr     a
1137      P:05BB 210E00            move              a0,a
1138      P:05BC 46F010            add     b,a       x:heigth,y0
                 000001
1139      P:05BE 0AF0A3            jpl     h1_ok
                 0005C4
1140   
1141      P:05C0 46F036            neg     a         x:zoom,y0
                 00001D
1142      P:05C2 567013            clr     a         a,x:yind
                 00001C
1143   
1144                     h1_ok
1145      P:05C4 567055            cmp     y0,a      a,x:h1
                 000019
1146      P:05C6 0AF0A1            jge     strahl_vorbei
                 000667
1147   
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 27



1148      P:05C8 567000            move              a,x:prev_h1
                 000017
1149   
1150      P:05CA 54F000            move              x:line_flag_2,a1
                 000029
1151      P:05CC 46F466            and     x1,a1     #>1,y0
                 000001
1152      P:05CE 200050            add     y0,a
1153      P:05CF 218600            move              a1,y0
1154      P:05D0 2000D0            mpy     x0,y0,a
1155      P:05D1 0608A0            rep     #8
1156      P:05D2 200022            asr     a
1157      P:05D3 210E00            move              a0,a
1158      P:05D4 44F410            add     b,a       #>1,x0
                 000001
1159      P:05D6 200044            sub     x0,a
1160   
1161      P:05D7 44F003            tst     a         x:heigth,x0
                 000001
1162      P:05D9 0AF0AB            jmi     strahl_vorbei
                 000667
1163   
1164      P:05DB 200045            cmp     x0,a
1165      P:05DC 0AF0A9            jlt     h2_ok
                 0005E0
1166   
1167      P:05DE 56F000            move              x:heigth_m1,a
                 000003
1168   
1169                     h2_ok
1170      P:05E0 567000            move              a,x:h2
                 00001A
1171      P:05E2 567000            move              a,x:prev_h2
                 000018
1172   
1173   
1174                                                                         ; -
----------------------------
1175                                                                         ; c
alc_text
1176                                                                         ; -
----------------------------
1177   
1178      P:05E4 44F413            clr     a         #>$00000f,x0
                 00000F
1179      P:05E6 50F000            move              x:line_flag_1,a0
                 000028
1180   
1181      P:05E8 0A2183            jclr    #3,x:flag,front_texture
                 0005F4
1182   
1183                                                                         ; r
ueckseite ist getroffen worden ...
1184                                                                         ; l
ine_flag_1: [23..20]
1185   
1186      P:05EA 0604A0            rep     #4
1187      P:05EB 200032            asl     a
1188      P:05EC 547000            move              a1,x:text
                 00001E
1189   
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 28



1190      P:05EE 0A298D            jclr    #13,x:line_flag_2,calc_text_out
                 0005F9
1191   
1192                                                                         ; r
ueckseite ist texturiert wie vorderseite ...
1193   
1194      P:05F0 0A7003            bclr    #3,x:flag
                 000021
1195   
1196      P:05F2 0AF080            jmp     calc_text_out
                 0005F9
1197   
1198                     front_texture
1199   
1200                                                                         ; t
exturnummer vorderseite holen ...
1201                                                                         ; l
ine_flag_1: [19..16]
1202   
1203      P:05F4 0608A0            rep     #8
1204      P:05F5 200032            asl     a
1205      P:05F6 200046            and     x0,a
1206      P:05F7 547000            move              a1,x:text
                 00001E
1207   
1208                     calc_text_out
1209   
1210                                                                         ; -
----------------------------
1211   
1212      P:05F9 0A21A3            jset    #3,x:flag,text_backside
                 00066A
1213   
1214                                                                         ; e
s ist eine textur ganz normal von vorne getroffen worden ...
1215   
1216                                                                         ; m
uss die textur maskiert werden, so das entsprechende flag setzen ...
1217                                                                         ; e
benso mit lightshading ...
1218   
1219      P:05FB 0A298E            jclr    #14,x:line_flag_2,no_mask         ; m
askierung notwendig ?
                 0005FF
1220      P:05FD 0A7036            bset    #22,x:xyoffi
                 000020
1221                     no_mask
1222      P:05FF 0A298F            jclr    #15,x:line_flag_2,no_lights       ; l
ightshading notwendig ?
                 000603
1223      P:0601 0A7035            bset    #21,x:xyoffi
                 000020
1224                     no_lights
1225   
1226                                                                         ; d
ann die normale textur in den strahl buffer eintragen ...
1227   
1228      P:0603 0BF080            jsr     make_entry
                 0006F4
1229   
1230                                                                         ; -
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 29



----------------------------
1231                                                                         ; i
st unterhalb der textur auch boden, dann diesen
1232                                                                         ; e
benfalls eintragen ...
1233   
1234      P:0605 0A298A            jclr    #10,x:line_flag_2,no_unten        ; b
oden vorhanden ?
                 00061D
1235   
1236      P:0607 56F000            move              x:prev_h1,a
                 000017
1237      P:0609 44F41B            clr     b         #>1,x0
                 000001
1238      P:060B 577044            sub     x0,a      b,x:h1
                 000019
1239      P:060D 0AF0AB            jmi     no_unten
                 00061D
1240   
1241                                                                         ; b
oden ist also nicht zu tief, um sichtbar zu sein ...
1242   
1243      P:060F 567013            clr     a         a,x:h2                  ; /
 neues h2 fuer boden
                 00001A
1244      P:0611 50F000            move              x:point1,a0             ; b
odenfarbe holen ...
                 000026
1245      P:0613 0608A0            rep     #8
1246      P:0614 200032            asl     a
1247      P:0615 547000            move              a1,x:text
                 00001E
1248      P:0617 577000            move              b,x:xyoffi
                 000020
1249   
1250      P:0619 0A7037            bset    #23,x:xyoffi                      ; f
lag fuer boden
                 000020
1251   
1252      P:061B 0BF080            jsr     make_entry
                 0006F4
1253   
1254                     no_unten
1255   
1256                                                                         ; -
----------------------------
1257                                                                         ; i
st oberhalb der textur auch decke, dann diese
1258                                                                         ; a
uch eintragen ...
1259   
1260      P:061D 0A298B            jclr    #11,x:line_flag_2,strahl_vorbei   ; d
ecke vorhanden ?
                 000667
1261   
1262      P:061F 0A298A            jclr    #10,x:line_flag_2,oben_nicht_unten ; 
war vorher auch
                 000625
1263                                                                         ; s
chon boden vorhanden ?
1264   
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 30



1265                                                                         ; d
a zu dieser textur gleichzeitig boden und decke vorhanden
1266                                                                         ; i
st, kann die maximale sichtweite auf die
1267                                                                         ; e
ntfernung der aktuellen linie gesetzt werden kann ...
1268   
1269      P:0621 56F000            move              x:entf,a
                 00001F
1270      P:0623 567000            move              a,x:entfernung_max
                 000050
1271   
1272   
1273                     oben_nicht_unten
1274   
1275      P:0625 56F000            move              x:prev_h2,a
                 000018
1276      P:0627 46F400            move              #>1,y0
                 000001
1277      P:0629 44F050            add     y0,a      x:heigth,x0
                 000001
1278      P:062B 567045            cmp     x0,a      a,x:h1
                 000019
1279      P:062D 0AF0A1            jge     strahl_vorbei
                 000667
1280   
1281                                                                         ; d
ie decke ist nicht zu hoch, um sichtbar zu sein ...
1282   
1283      P:062F 0A298C            jclr    #12,x:line_flag_2,no_clouds
                 000656
1284   
1285                                                                         ; -
----------------------------
1286                                                                         ; e
s ist himmel vorhanden ...
1287   
1288      P:0631 57F000            move              x:sky_text,b
                 000047
1289      P:0633 577000            move              b,x:text
                 00001E
1290      P:0635 57F000            move              x:heigth_m1,b
                 000003
1291      P:0637 577000            move              b,x:h2
                 00001A
1292      P:0639 44F02B            lsr     b         x:sky_zoom,x0
                 000045
1293      P:063B 447014            sub     b,a       x0,x:zoom
                 00001D
1294      P:063D 567000            move              a,x:yind
                 00001C
1295   
1296      P:063F 57F000            move              x:double_x,b
                 000009
1297      P:0641 56F00B            tst     b         x:koll_counter,a
                 00000E
1298      P:0643 0AF0AA            jeq     no_double_x
                 000646
1299      P:0645 200033            lsl     a
1300                     no_double_x
1301      P:0646 44F000            move              x:alpha,x0
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 31



                 000007
1302      P:0648 57F040            add     x0,a      x:time,b
                 00004F
1303      P:064A 46F010            add     b,a       x:sky_and_maske,y0
                 000048
1304      P:064C 57F056            and     y0,a      x:sky_xyoffi,b
                 000046
1305      P:064E 567000            move              a,x:xind
                 00001B
1306      P:0650 577000            move              b,x:xyoffi
                 000020
1307   
1308      P:0652 0BF080            jsr     make_entry
                 0006F4
1309   
1310      P:0654 0AF080            jmp     strahl_vorbei
                 000667
1311   
1312   
1313   
1314                                                                         ; -
----------------------------
1315                                                                         ; e
s ist normale decke einzutragen ...
1316   
1317                     no_clouds
1318      P:0656 200013            clr     a
1319      P:0657 50F000            move              x:point2,a0
                 000027
1320      P:0659 0608A0            rep     #8
1321      P:065A 200032            asl     a
1322      P:065B 547000            move              a1,x:text
                 00001E
1323   
1324      P:065D 56F01B            clr     b         x:heigth_m1,a
                 000003
1325      P:065F 577000            move              b,x:xyoffi
                 000020
1326      P:0661 567000            move              a,x:h2
                 00001A
1327   
1328      P:0663 0A7037            bset    #23,x:xyoffi
                 000020
1329   
1330      P:0665 0BF080            jsr     make_entry
                 0006F4
1331   
1332                     strahl_vorbei
1333      P:0667 000000            nop
1334                     kollision_loop
1335      P:0668 000000            nop
1336   
1337      P:0669 00000C            rts
1338   
1339                     ; -------------------------------------
1340   
1341                     text_backside
1342   
1343      P:066A 0A298A            jclr    #10,x:line_flag_2,text_backside2
                 000675
1344   
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 32



1345                                                                         ; -
----------------------------
1346                                                                         ; d
ie rueckseite wird zu boden ...
1347   
1348      P:066C 44F400            move              #>$800000,x0            ; b
it 23 ist gesetzt
                 800000
1349      P:066E 447013            clr     a         x0,x:xyoffi
                 000020
1350      P:0670 567000            move              a,x:h1
                 000019
1351   
1352      P:0672 0BF080            jsr     make_entry
                 0006F4
1353   
1354      P:0674 0C0667            jmp     strahl_vorbei
1355   
1356   
1357                     text_backside2
1358   
1359      P:0675 0A298B            jclr    #11,x:line_flag_2,strahl_vorbei
                 000667
1360   
1361                                                                         ; -
----------------------------
1362                                                                         ; d
ie rueckseite wird zu decke
1363   
1364      P:0677 44F000            move              x:heigth_m1,x0
                 000003
1365      P:0679 447013            clr     a         x0,x:h2
                 00001A
1366      P:067B 567000            move              a,x:xyoffi
                 000020
1367      P:067D 0A7037            bset    #23,x:xyoffi
                 000020
1368   
1369      P:067F 0BF080            jsr     make_entry
                 0006F4
1370   
1371      P:0681 0C0667            jmp     strahl_vorbei
1372   
1373   
1374                     ; -------------------------------------
1375   
1376                     steile_linie
1377      P:0682 44ED00            move              x:(r5+n5),x0            ;ta
n
1378      P:0683 21C500            move              a,x1                    ;xs
1379      P:0684 57F0A0            mpy     x0,x1,a   x:p_y2,b                ;ys
 = tan(a) * xs / y2
                 000013
1380   
1381      P:0686 20007D            cmp     y1,b
1382      P:0687 0AF0A9            jlt     change_y_koord
                 000695
1383   
1384      P:0689 200075            cmp     y1,a
1385      P:068A 0E9667            jlt     strahl_vorbei
1386      P:068B 200005            cmp     b,a
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 33



1387      P:068C 0E7667            jgt     strahl_vorbei
1388   
1389                     steile_normal
1390      P:068D 0B7021            btst    #1,x:flag
                 000021
1391      P:068F 0AF0A8            jcs     steile_vertauscht_go
                 00069E
1392                     steile_normal_go
1393      P:0691 21CF00            move              a,b
1394      P:0692 20007C            sub     y1,b
1395   
1396      P:0693 0AF080            jmp     steile_weiter
                 00069F
1397   
1398                     change_y_koord
1399      P:0695 200005            cmp     b,a
1400      P:0696 0E9667            jlt     strahl_vorbei
1401      P:0697 20E675            cmp     y1,a      y1,y0
1402      P:0698 0E7667            jgt     strahl_vorbei
1403   
1404      P:0699 21E700            move              b,y1
1405      P:069A 20CF00            move              y0,b
1406   
1407      P:069B 0B7021            btst    #1,x:flag
                 000021
1408      P:069D 0E8691            jcs     steile_normal_go
1409                     steile_vertauscht_go
1410      P:069E 20001C            sub     a,b
1411   
1412                     steile_weiter
1413      P:069F 21E600            move              b,y0
1414   
1415      P:06A0 47F413            clr     a         #>$1,y1
                 000001
1416      P:06A2 50F000            move              x:line_flag_3,a0
                 00002A
1417      P:06A4 0608A0            rep     #8
1418      P:06A5 200032            asl     a
1419      P:06A6 218500            move              a1,x1
1420      P:06A7 200070            add     y1,a
1421      P:06A8 200033            lsl     a
1422      P:06A9 200033            lsl     a
1423      P:06AA 200074            sub     y1,a
1424      P:06AB 218700            move              a1,y1
1425   
1426      P:06AC 44F0B8            mpy     y0,y1,b   x:p_dy,x0
                 000015
1427      P:06AE 20002A            asr     b
1428      P:06AF 00FEB9            andi    #$fe,ccr
1429      P:06B0 20003A            asl     b
1430      P:06B1 0618A0            rep     #24
1431      P:06B2 018048            div     x0,b
1432   
1433      P:06B3 212E00            move              b0,a
1434   
1435      P:06B4 57F000            move              x:line_flag_1,b
                 000028
1436      P:06B6 44F400            move              #>$ff00,x0
                 00FF00
1437      P:06B8 20004E            and     x0,b
1438      P:06B9 0608A0            rep     #8
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 34



1439      P:06BA 20002B            lsr     b
1440      P:06BB 21A500            move              b1,x1
1441      P:06BC 200066            and     x1,a
1442   
1443      P:06BD 567000            move              a,x:xind
                 00001B
1444   
1445      P:06BF 0C0592            jmp     entry_vorbereiten
1446   
1447                     set_steile_flag
1448      P:06C0 0A7020            bset    #0,x:flag
                 000021
1449      P:06C2 00000C            rts
1450   
1451                     negiere_dy
1452      P:06C3 200036            neg     a
1453      P:06C4 00000C            rts
1454   
1455   
1456                     ; -------------------------------------
1457   
1458                     flache_linie
1459      P:06C5 44F055            cmp     y0,a      x:p_x2,x0               ; x
1 < xs (!) / x2
                 000011
1460      P:06C7 0E9667            jlt     strahl_vorbei
1461      P:06C8 200045            cmp     x0,a                              ; x
s < x2 (!)
1462      P:06C9 0E7667            jgt     strahl_vorbei
1463   
1464      P:06CA 0A2181            jclr    #1,x:flag,flache_normal           ; x
_punkte vertauscht ?
                 0006D1
1465   
1466                     flache_vertauscht
1467   
1468      P:06CC 57F000            move              x:p_x2,b
                 000011
1469      P:06CE 20001C            sub     a,b
1470   
1471      P:06CF 0AF080            jmp     flache_weiter
                 0006D3
1472   
1473                     flache_normal
1474      P:06D1 21CF00            move              a,b
1475      P:06D2 20005C            sub     y0,b
1476   
1477                     flache_weiter
1478      P:06D3 21E600            move              b,y0
1479      P:06D4 47F413            clr     a         #>1,y1
                 000001
1480      P:06D6 50F000            move              x:line_flag_3,a0
                 00002A
1481      P:06D8 0608A0            rep     #8
1482      P:06D9 200032            asl     a
1483      P:06DA 218500            move              a1,x1
1484      P:06DB 200070            add     y1,a
1485      P:06DC 200033            lsl     a
1486      P:06DD 200033            lsl     a
1487      P:06DE 200074            sub     y1,a
1488      P:06DF 218700            move              a1,y1
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 35



1489   
1490      P:06E0 2000B8            mpy     y0,y1,b
1491      P:06E1 20002A            asr     b
1492      P:06E2 00FEB9            andi    #$fe,ccr
1493      P:06E3 44F03A            asl     b         x:p_dx,x0
                 000014
1494      P:06E5 0618A0            rep     #24
1495      P:06E6 018048            div     x0,b
1496   
1497      P:06E7 212E00            move              b0,a
1498   
1499      P:06E8 57F000            move              x:line_flag_1,b
                 000028
1500      P:06EA 44F400            move              #>$ff00,x0
                 00FF00
1501      P:06EC 20004E            and     x0,b
1502      P:06ED 0608A0            rep     #8
1503      P:06EE 20002B            lsr     b
1504      P:06EF 21A500            move              b1,x1
1505      P:06F0 200066            and     x1,a
1506   
1507      P:06F1 567000            move              a,x:xind
                 00001B
1508   
1509      P:06F3 0C0592            jmp     entry_vorbereiten
1510   
1511   
1512                     ; -------------------------------------
1513   
1514                     make_entry
1515      P:06F4 200013            clr     a
1516      P:06F5 567000            move              a,x:stack_anz
                 0027D8
1517   
1518      P:06F7 0BF080            jsr     make_entry_now
                 000724
1519   
1520                     clear_stack_loop
1521      P:06F9 56F000            move              x:stack_anz,a
                 0027D8
1522      P:06FB 44F403            tst     a         #>1,x0
                 000001
1523      P:06FD 0AF0A2            jne     clear_stack_now
                 000700
1524   
1525      P:06FF 00000C            rts
1526   
1527                     clear_stack_now
1528      P:0700 200044            sub     x0,a
1529      P:0701 567033            lsl     a         a,x:stack_anz
                 0027D8
1530      P:0703 200033            lsl     a
1531      P:0704 57F433            lsl     a         #>stack,b
                 0027DA
1532      P:0706 200018            add     a,b
1533      P:0707 21F100            move              b,r1
1534   
1535      P:0708 000000            nop
1536   
1537      P:0709 44D900            move              x:(r1)+,x0
1538      P:070A 447000            move              x0,x:h1
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 36



                 000019
1539      P:070C 44D900            move              x:(r1)+,x0
1540      P:070D 447000            move              x0,x:h2
                 00001A
1541      P:070F 44D900            move              x:(r1)+,x0
1542      P:0710 447000            move              x0,x:xind
                 00001B
1543      P:0712 44D900            move              x:(r1)+,x0
1544      P:0713 447000            move              x0,x:yind
                 00001C
1545      P:0715 44D900            move              x:(r1)+,x0
1546      P:0716 447000            move              x0,x:zoom
                 00001D
1547      P:0718 44D900            move              x:(r1)+,x0
1548      P:0719 447000            move              x0,x:text
                 00001E
1549      P:071B 44D900            move              x:(r1)+,x0
1550      P:071C 447000            move              x0,x:entf
                 00001F
1551      P:071E 44D900            move              x:(r1)+,x0
1552      P:071F 447000            move              x0,x:xyoffi
                 000020
1553   
1554      P:0721 0BF080            jsr     make_entry_now
                 000724
1555   
1556      P:0723 0C06F9            jmp     clear_stack_loop
1557   
1558                     ;---------------
1559   
1560                     make_entry_now
1561      P:0724 61F400            move              #>strahl_buffer,r1
                 0028DA
1562      P:0726 56F000            move              x:strahl_buffer_anz,a
                 00002C
1563      P:0728 67F000            move              x:strahl_buffer_free,r7
                 00002B
1564   
1565                     ;* r1: strahl_buffer
1566                     ;* r7: strahl_buffer (erster freier platz)
1567   
1568      P:072A 567003            tst     a         a,x:make_counter
                 00000F
1569      P:072C 0AF0AA            jeq     entry_loop
                 0008B5
1570   
1571                     entry_loop_anf
1572      P:072E 71F400            move              #>6,n1
                 000006
1573      P:0730 223A00            move              r1,n2
1574      P:0731 44E900            move              x:(r1+n1),x0            ;en
tf
1575   
1576      P:0732 56F000            move              x:entf,a
                 00001F
1577      P:0734 71F447            cmpm    x0,a      #>1,n1
                 000001
1578      P:0736 0AF0A7            jgt     dahinter
                 0007E8
1579      P:0738 0AF0A9            jlt     davor
                 00073C
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 37



1580                     gleich
1581      P:073A 0A20B7            jset    #23,x:xyoffi,dahinter
                 0007E8
1582   
1583                     davor
1584      P:073C 56E100            move              x:(r1),a                ;h1
1585      P:073D 21C403            tst     a         a,x0
1586      P:073E 0AF0AB            jmi     entry_ready
                 0008AA
1587      P:0740 45E900            move              x:(r1+n1),x1            ;h2
1588      P:0741 57F000            move              x:h2,b
                 00001A
1589      P:0743 56F04D            cmp     x0,b      x:h1,a
                 000019
1590      P:0745 0AF0A9            jlt     entry_ready                       ;ke
ine berschneidung
                 0008AA
1591      P:0747 71F465            cmp     x1,a      #>7,n1
                 000007
1592      P:0749 0AF0A7            jgt     entry_ready                       ;ke
ine berschneidung
                 0008AA
1593   
1594      P:074B 0A20B6            jset    #22,x:xyoffi,entry_ready          ;ma
ske vor etwas
                 0008AA
1595      P:074D 0A69B7            jset    #23,x:(r1+n1),text_boden_vor_boden ;e
twas vor boden
                 0007A1
1596   
1597      P:074F 71F445            cmp     x0,a      #>1,n1
                 000001
1598      P:0751 0AF0AA            jeq     davor_case_137
                 000790
1599      P:0753 20006D            cmp     x1,b
1600      P:0754 0AF0AA            jeq     davor_case_238
                 000797
1601   
1602                     davor_case_4569
1603      P:0756 200045            cmp     x0,a
1604      P:0757 0AF0A7            jgt     davor_case_45
                 00076B
1605                     davor_case_69
1606      P:0759 20006D            cmp     x1,b
1607      P:075A 0AF0A7            jgt     davor_case_3789
                 000792
1608                     davor_case_16
1609      P:075C 56F000            move              x:h2,a
                 00001A
1610      P:075E 44E100            move              x:(r1),x0
1611      P:075F 71F444            sub     x0,a      #>$3,n1
                 000003
1612      P:0761 45F400            move              #>1,x1
                 000001
1613      P:0763 46E900            move              x:(r1+n1),y0
1614      P:0764 20AF50            add     y0,a      x1,b
1615      P:0765 44F060            add     x1,a      x:h2,x0
                 00001A
1616      P:0767 566948            add     x0,b      a,x:(r1+n1)             ; n
ew yind
1617      P:0768 576100            move              b,x:(r1)
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 38



1618   
1619      P:0769 0AF080            jmp     entry_ready
                 0008AA
1620                     davor_case_45
1621      P:076B 20006D            cmp     x1,b
1622      P:076C 0AF0A7            jgt     davor_case_25
                 000799
1623                     davor_case_4
1624      P:076E 46F400            move              #>$1,y0
                 000001
1625      P:0770 56F000            move              x:h2,a
                 00001A
1626      P:0772 45D950            add     y0,a      x:(r1)+,x1
1627      P:0773 565F00            move              a,x:(r7)+
1628   
1629      P:0774 56F000            move              x:h1,a
                 000019
1630      P:0776 44E154            sub     y0,a      x:(r1),x0
1631      P:0777 565900            move              a,x:(r1)+
1632   
1633      P:0778 445F00            move              x0,x:(r7)+
1634      P:0779 44D900            move              x:(r1)+,x0
1635      P:077A 445F00            move              x0,x:(r7)+
1636   
1637      P:077B 56F000            move              x:h2,a
                 00001A
1638      P:077D 44D964            sub     x1,a      x:(r1)+,x0
1639      P:077E 45F440            add     x0,a      #>$1,x1
                 000001
1640      P:0780 44D960            add     x1,a      x:(r1)+,x0
1641      P:0781 565F00            move              a,x:(r7)+               ;ne
w yind
1642   
1643      P:0782 445F00            move              x0,x:(r7)+
1644      P:0783 44D900            move              x:(r1)+,x0
1645      P:0784 445F00            move              x0,x:(r7)+
1646      P:0785 44D900            move              x:(r1)+,x0
1647      P:0786 445F00            move              x0,x:(r7)+
1648      P:0787 44D900            move              x:(r1)+,x0
1649      P:0788 445F00            move              x0,x:(r7)+
1650   
1651      P:0789 56F000            move              x:strahl_buffer_anz,a
                 00002C
1652      P:078B 200050            add     y0,a
1653      P:078C 567000            move              a,x:strahl_buffer_anz
                 00002C
1654   
1655      P:078E 0AF080            jmp     entry_ready
                 0008AA
1656                     davor_case_137
1657      P:0790 20006D            cmp     x1,b
1658      P:0791 0E975C            jlt     davor_case_16
1659                     davor_case_3789
1660      P:0792 44F400            move              #>-1,x0
                 FFFFFF
1661      P:0794 446100            move              x0,x:(r1)
1662   
1663      P:0795 0AF080            jmp     entry_ready
                 0008AA
1664                     davor_case_238
1665      P:0797 200045            cmp     x0,a
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 39



1666      P:0798 0EF792            jle     davor_case_3789
1667                     davor_case_25
1668      P:0799 56F000            move              x:h1,a
                 000019
1669      P:079B 44F400            move              #>1,x0
                 000001
1670      P:079D 200044            sub     x0,a
1671      P:079E 566900            move              a,x:(r1+n1)
1672   
1673      P:079F 0AF080            jmp     entry_ready
                 0008AA
1674   
1675                     ;***************
1676   
1677                     text_boden_vor_boden
1678   
1679      P:07A1 71F445            cmp     x0,a      #>1,n1
                 000001
1680      P:07A3 0AF0AA            jeq     tbvb_case_137
                 0007D7
1681      P:07A5 20006D            cmp     x1,b
1682      P:07A6 0AF0AA            jeq     tbvb_case_238
                 0007DE
1683   
1684                     tbvb_case_4569
1685      P:07A8 200045            cmp     x0,a
1686      P:07A9 0AF0A7            jgt     tbvb_case_45
                 0007B6
1687                     tbvb_case_69
1688      P:07AB 20006D            cmp     x1,b
1689      P:07AC 0AF0A7            jgt     tbvb_case_3789
                 0007D9
1690                     tbvb_case_16
1691      P:07AE 44F000            move              x:h2,x0
                 00001A
1692      P:07B0 56F400            move              #>1,a
                 000001
1693      P:07B2 200040            add     x0,a
1694      P:07B3 566100            move              a,x:(r1)
1695   
1696      P:07B4 0AF080            jmp     entry_ready
                 0008AA
1697                     tbvb_case_45
1698      P:07B6 20006D            cmp     x1,b
1699      P:07B7 0AF0A7            jgt     tbvb_case_25
                 0007E0
1700                     tbvb_case_4
1701      P:07B9 46F400            move              #>1,y0
                 000001
1702      P:07BB 56F000            move              x:h2,a
                 00001A
1703      P:07BD 45D950            add     y0,a      x:(r1)+,x1
1704      P:07BE 565F00            move              a,x:(r7)+
1705   
1706      P:07BF 56F000            move              x:h1,a
                 000019
1707      P:07C1 44E154            sub     y0,a      x:(r1),x0
1708      P:07C2 565900            move              a,x:(r1)+
1709      P:07C3 445F00            move              x0,x:(r7)+
1710      P:07C4 44D900            move              x:(r1)+,x0
1711      P:07C5 445F00            move              x0,x:(r7)+
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 40



1712      P:07C6 44D900            move              x:(r1)+,x0
1713      P:07C7 445F00            move              x0,x:(r7)+
1714      P:07C8 44D900            move              x:(r1)+,x0
1715      P:07C9 445F00            move              x0,x:(r7)+
1716      P:07CA 44D900            move              x:(r1)+,x0
1717      P:07CB 445F00            move              x0,x:(r7)+
1718      P:07CC 44D900            move              x:(r1)+,x0
1719      P:07CD 445F00            move              x0,x:(r7)+
1720      P:07CE 44D900            move              x:(r1)+,x0
1721      P:07CF 445F00            move              x0,x:(r7)+
1722   
1723      P:07D0 56F000            move              x:strahl_buffer_anz,a
                 00002C
1724      P:07D2 200050            add     y0,a
1725      P:07D3 567000            move              a,x:strahl_buffer_anz
                 00002C
1726   
1727      P:07D5 0AF080            jmp     entry_ready
                 0008AA
1728                     tbvb_case_137
1729      P:07D7 20006D            cmp     x1,b
1730      P:07D8 0E97AE            jlt     tbvb_case_16
1731                     tbvb_case_3789
1732      P:07D9 44F400            move              #>-1,x0
                 FFFFFF
1733      P:07DB 446100            move              x0,x:(r1)
1734   
1735      P:07DC 0AF080            jmp     entry_ready
                 0008AA
1736                     tbvb_case_238
1737      P:07DE 200045            cmp     x0,a
1738      P:07DF 0EF7D9            jle     tbvb_case_3789
1739                     tbvb_case_25
1740      P:07E0 56F000            move              x:h1,a
                 000019
1741      P:07E2 44F400            move              #>1,x0
                 000001
1742      P:07E4 200044            sub     x0,a
1743      P:07E5 566900            move              a,x:(r1+n1)
1744   
1745      P:07E6 0AF080            jmp     entry_ready
                 0008AA
1746   
1747                     ;***************
1748   
1749                     dahinter
1750      P:07E8 56E100            move              x:(r1),a                ;h1
1751      P:07E9 21C403            tst     a         a,x0
1752      P:07EA 0AF0AB            jmi     entry_ready
                 0008AA
1753      P:07EC 45E900            move              x:(r1+n1),x1            ;h2
1754      P:07ED 57F000            move              x:h2,b
                 00001A
1755      P:07EF 56F04D            cmp     x0,b      x:h1,a
                 000019
1756      P:07F1 0AF0A9            jlt     entry_ready                       ;ke
ine berschneidung
                 0008AA
1757      P:07F3 71F465            cmp     x1,a      #>7,n1
                 000007
1758      P:07F5 0AF0A7            jgt     entry_ready                       ;ke
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 41



ine berschneidung
                 0008AA
1759   
1760      P:07F7 0A69B6            jset    #22,x:(r1+n1),entry_ready         ;et
was hinter maske -> berspr.
                 0008AA
1761      P:07F9 0A20B7            jset    #23,x:xyoffi,boden_hinter_textur_bode
n
                 00085A
1762   
1763      P:07FB 71F445            cmp     x0,a      #>$1,n1
                 000001
1764      P:07FD 0AF0AA            jeq     dahint_case_137
                 00084B
1765      P:07FF 20006D            cmp     x1,b
1766      P:0800 0AF0AA            jeq     dahint_case_238
                 000850
1767   
1768                     dahint_case_4569
1769      P:0802 200045            cmp     x0,a
1770      P:0803 0AF0A9            jlt     dahint_case_45
                 000817
1771                     dahint_case_69
1772      P:0805 20006D            cmp     x1,b
1773      P:0806 0AF0AF            jle     dahint_case_3789
                 00084D
1774                     dahint_case_16
1775      P:0808 56E900            move              x:(r1+n1),a
1776      P:0809 44F000            move              x:h1,x0
                 000019
1777      P:080B 45F444            sub     x0,a      #>1,x1
                 000001
1778      P:080D 46F000            move              x:yind,y0
                 00001C
1779      P:080F 20AF50            add     y0,a      x1,b
1780      P:0810 44E960            add     x1,a      x:(r1+n1),x0
1781      P:0811 567048            add     x0,b      a,x:yind
                 00001C
1782      P:0813 577000            move              b,x:h1
                 000019
1783   
1784      P:0815 0AF080            jmp     entry_ready
                 0008AA
1785                     dahint_case_45
1786      P:0817 20006D            cmp     x1,b
1787      P:0818 0AF0AF            jle     dahint_case_25
                 000852
1788                     dahint_case_4
1789      P:081A 47E900            move              x:(r1+n1),y1            ; h
2 retten
1790   
1791      P:081B 56F000            move              x:stack_anz,a           ; s
tack erhoehen
                 0027D8
1792      P:081D 57F400            move              #>stack_lines_max,b
                 000020
1793      P:081F 44F405            cmp     b,a       #>1,x0
                 000001
1794      P:0821 0AF0AA            jeq     dahintc4_out
                 000843
1795      P:0823 21CF40            add     x0,a      a,b
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 42



1796      P:0824 56703B            lsl     b         a,x:stack_anz
                 0027D8
1797      P:0826 20003B            lsl     b
1798      P:0827 56F43B            lsl     b         #>stack,a
                 0027DA
1799      P:0829 46F010            add     b,a       x:h2,y0
                 00001A
1800      P:082B 21D171            tfr     y1,a      a,r1                    ; o
ld h2
1801      P:082C 20EF40            add     x0,a      y1,b
1802      P:082D 565900            move              a,x:(r1)+               ; n
ew h1
1803      P:082E 465900            move              y0,x:(r1)+              ; n
ew h2
1804      P:082F 46F000            move              x:xind,y0
                 00001B
1805      P:0831 465900            move              y0,x:(r1)+              ; n
ew xind
1806      P:0832 46F048            add     x0,b      x:h1,y0                 ; +
1 korrekturaddition
                 000019
1807      P:0834 20005C            sub     y0,b
1808      P:0835 575900            move              b,x:(r1)+               ; n
ew yind
1809      P:0836 46F000            move              x:zoom,y0
                 00001D
1810      P:0838 465900            move              y0,x:(r1)+
1811      P:0839 46F000            move              x:text,y0
                 00001E
1812      P:083B 465900            move              y0,x:(r1)+
1813      P:083C 46F000            move              x:entf,y0
                 00001F
1814      P:083E 465900            move              y0,x:(r1)+
1815      P:083F 46F000            move              x:xyoffi,y0
                 000020
1816      P:0841 466100            move              y0,x:(r1)
1817   
1818                                                                         ; a
ktuell einzutragende
1819                                                                         ; t
extur anpassen, dabei
1820                                                                         ; r
egister r1 zurueckholen ...
1821   
1822      P:0842 235100            move              n2,r1
1823                     dahintc4_out
1824      P:0843 44F400            move              #>1,x0
                 000001
1825      P:0845 56E100            move              x:(r1),a
1826      P:0846 200044            sub     x0,a
1827      P:0847 567000            move              a,x:h2
                 00001A
1828   
1829      P:0849 0AF080            jmp     entry_ready
                 0008AA
1830                     dahint_case_137
1831      P:084B 20006D            cmp     x1,b
1832      P:084C 0E7808            jgt     dahint_case_16
1833                     dahint_case_3789
1834      P:084D 677000            move              r7,x:strahl_buffer_free
                 00002B
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 43



1835   
1836      P:084F 00000C            rts
1837                     dahint_case_238
1838      P:0850 200045            cmp     x0,a
1839      P:0851 0E184D            jge     dahint_case_3789
1840                     dahint_case_25
1841      P:0852 56E100            move              x:(r1),a
1842      P:0853 44F400            move              #>1,x0
                 000001
1843      P:0855 200044            sub     x0,a
1844      P:0856 567000            move              a,x:h2
                 00001A
1845   
1846      P:0858 0AF080            jmp     entry_ready
                 0008AA
1847   
1848                     ;***************
1849   
1850                     boden_hinter_textur_boden
1851   
1852      P:085A 71F445            cmp     x0,a      #>$1,n1
                 000001
1853      P:085C 0AF0AA            jeq     bhtb_case_137
                 00089D
1854      P:085E 20006D            cmp     x1,b
1855      P:085F 0AF0AA            jeq     bhtb_case_238
                 0008A2
1856   
1857                     bhtb_case_4569
1858      P:0861 200045            cmp     x0,a
1859      P:0862 0AF0A9            jlt     bhtb_case_45
                 00086F
1860                     bhtb_case_69
1861      P:0864 20006D            cmp     x1,b
1862      P:0865 0AF0AF            jle     bhtb_case_3789
                 00089F
1863                     bhtb_case_16
1864      P:0867 44E900            move              x:(r1+n1),x0
1865      P:0868 56F400            move              #>1,a
                 000001
1866      P:086A 200040            add     x0,a
1867      P:086B 567000            move              a,x:h1
                 000019
1868   
1869      P:086D 0AF080            jmp     entry_ready
                 0008AA
1870                     bhtb_case_45
1871      P:086F 20006D            cmp     x1,b
1872      P:0870 0AF0AF            jle     bhtb_case_25
                 0008A4
1873                     bhtb_case_4
1874      P:0872 47E900            move              x:(r1+n1),y1            ; h
2 retten
1875   
1876      P:0873 56F000            move              x:stack_anz,a           ; s
tack erhoehen
                 0027D8
1877      P:0875 57F400            move              #>stack_lines_max,b
                 000020
1878      P:0877 44F405            cmp     b,a       #>1,x0
                 000001
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 44



1879      P:0879 0AF0AA            jeq     bhtbc4_out
                 000895
1880      P:087B 21CF40            add     x0,a      a,b
1881      P:087C 56703B            lsl     b         a,x:stack_anz
                 0027D8
1882      P:087E 20003B            lsl     b
1883      P:087F 56F43B            lsl     b         #>stack,a
                 0027DA
1884      P:0881 46F010            add     b,a       x:h2,y0
                 00001A
1885      P:0883 21D100            move              a,r1
1886      P:0884 20EE00            move              y1,a                    ; h
2
1887      P:0885 200040            add     x0,a
1888      P:0886 565900            move              a,x:(r1)+               ; n
ew h1
1889      P:0887 465900            move              y0,x:(r1)+              ; n
ew h2
1890      P:0888 465900            move              y0,x:(r1)+              ; d
ummy (xind)
1891      P:0889 465900            move              y0,x:(r1)+              ; d
ummy (yind)
1892      P:088A 465900            move              y0,x:(r1)+              ; d
ummy (zoom)
1893      P:088B 46F000            move              x:text,y0
                 00001E
1894      P:088D 465900            move              y0,x:(r1)+
1895      P:088E 46F000            move              x:entf,y0
                 00001F
1896      P:0890 465900            move              y0,x:(r1)+
1897      P:0891 46F000            move              x:xyoffi,y0
                 000020
1898      P:0893 466100            move              y0,x:(r1)
1899   
1900                                                                         ; a
ktuell einzutragende
1901                                                                         ; t
extur anpassen, dabei
1902                                                                         ; r
egister r1 zurueckholen ...
1903   
1904      P:0894 235100            move              n2,r1
1905      P:0895 44F400  bhtbc4_out move             #>1,x0
                 000001
1906      P:0897 56E100            move              x:(r1),a
1907      P:0898 200044            sub     x0,a
1908      P:0899 567000            move              a,x:h2
                 00001A
1909   
1910      P:089B 0AF080            jmp     entry_ready
                 0008AA
1911                     bhtb_case_137
1912      P:089D 20006D            cmp     x1,b
1913      P:089E 0E7867            jgt     bhtb_case_16
1914                     bhtb_case_3789
1915      P:089F 677000            move              r7,x:strahl_buffer_free
                 00002B
1916   
1917      P:08A1 00000C            rts
1918                     bhtb_case_238
1919      P:08A2 200045            cmp     x0,a
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 45



1920      P:08A3 0E189F            jge     bhtb_case_3789
1921                     bhtb_case_25
1922      P:08A4 56E100            move              x:(r1),a
1923      P:08A5 44F400            move              #>1,x0
                 000001
1924      P:08A7 200044            sub     x0,a
1925      P:08A8 567000            move              a,x:h2
                 00001A
1926   
1927                     ;***************
1928   
1929                     entry_ready
1930      P:08AA 234E00            move              n2,a
1931      P:08AB 44F400            move              #>8,x0
                 000008
1932      P:08AD 46F440            add     x0,a      #>1,y0
                 000001
1933      P:08AF 57F000            move              x:make_counter,b
                 00000F
1934      P:08B1 21D15C            sub     y0,b      a,r1
1935      P:08B2 577000            move              b,x:make_counter
                 00000F
1936      P:08B4 0E272E            jne     entry_loop_anf
1937   
1938                     entry_loop
1939      P:08B5 44F000            move              x:h1,x0                 ;te
xture_endgltig_eintragen
                 000019
1940      P:08B7 445F00            move              x0,x:(r7)+
1941      P:08B8 44F000            move              x:h2,x0
                 00001A
1942      P:08BA 445F00            move              x0,x:(r7)+
1943      P:08BB 44F000            move              x:xind,x0
                 00001B
1944      P:08BD 445F00            move              x0,x:(r7)+
1945      P:08BE 44F000            move              x:yind,x0
                 00001C
1946      P:08C0 445F00            move              x0,x:(r7)+
1947      P:08C1 44F000            move              x:zoom,x0
                 00001D
1948      P:08C3 445F00            move              x0,x:(r7)+
1949      P:08C4 44F000            move              x:text,x0
                 00001E
1950      P:08C6 445F00            move              x0,x:(r7)+
1951      P:08C7 44F000            move              x:entf,x0
                 00001F
1952      P:08C9 445F00            move              x0,x:(r7)+
1953      P:08CA 44F000            move              x:xyoffi,x0
                 000020
1954      P:08CC 445F00            move              x0,x:(r7)+
1955   
1956      P:08CD 56F000            move              x:strahl_buffer_anz,a
                 00002C
1957      P:08CF 44F400            move              #>1,x0
                 000001
1958      P:08D1 677040            add     x0,a      r7,x:strahl_buffer_free
                 00002B
1959      P:08D3 567000            move              a,x:strahl_buffer_anz
                 00002C
1960   
1961   
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 46



1962      P:08D5 00000C            rts
1963   
1964                     ;******************************************************
****
1965   
1966                     make_bild_entry
1967      P:08D6 67F000            move              x:bild_boden_pos,r7
                 00002D
1968      P:08D8 64F000            move              x:bild_mask_pos,r4
                 00002E
1969   
1970      P:08DA 56F000            move              x:strahl_buffer_anz,a
                 00002C
1971      P:08DC 21C403            tst     a         a,x0
1972      P:08DD 0AF0AA            jeq     no_text_in_strahl
                 000942
1973   
1974      P:08DF 47F000            move              x:heigth_m1,y1
                 000003
1975      P:08E1 477000            move              y1,x:p_x1               ; Z
wischenspeicher
                 000010
1976   
1977      P:08E3 61F400            move              #>strahl_buffer,r1
                 0028DA
1978   
1979      P:08E5 06C400            do      x0,no_text_in_strahl
                 000941
1980   
1981      P:08E7 71F400            move              #>6,n1
                 000006
1982      P:08E9 56D900            move              x:(r1)+,a               ; h
1
1983      P:08EA 44E900            move              x:(r1+n1),x0
1984      P:08EB 447000            move              x0,x:xyoffi
                 000020
1985   
1986      P:08ED 21C403            tst     a         a,x0
1987      P:08EE 0AF0AB            jmi     next_text
                 00094C
1988   
1989      P:08F0 0A20B7            jset    #23,x:xyoffi,make_bild_boden
                 000952
1990      P:08F2 0A20B6            jset    #22,x:xyoffi,make_bild_mask
                 00096E
1991   
1992      P:08F4 56D900            move              x:(r1)+,a               ; h
2
1993      P:08F5 200044            sub     x0,a
1994      P:08F6 0AF0A3            jpl     mbe_t_ok
                 0008F9
1995      P:08F8 200013            clr     a
1996                     mbe_t_ok
1997      P:08F9 5E5800            move                          a,y:(r0)+   ; d
bra
1998   
1999      P:08FA 20EE00            move              y1,a                    ; y
1 = heigth - 1
2000      P:08FB 46F044            sub     x0,a      x:true,y0
                 00000A
2001      P:08FD 21C500            move              a,x1
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 47



2002      P:08FE 2000E0            mpy     x1,y0,a
2003      P:08FF 200022            asr     a
2004      P:0900 585800            move                          a0,y:(r0)+  ; y
offset
2005   
2006      P:0901 56F000            move              x:xyoffi,a
                 000020
2007      P:0903 44F400            move              #>$00ff00,x0
                 00FF00
2008      P:0905 200046            and     x0,a
2009      P:0906 0608A0            rep     #8
2010      P:0907 200023            lsr     a
2011      P:0908 45D900            move              x:(r1)+,x1              ; x
ind
2012      P:0909 44F460            add     x1,a      #>512,x0
                 000200
2013      P:090B 21C500            move              a,x1
2014      P:090C 2000A0            mpy     x0,x1,a
2015      P:090D 200022            asr     a
2016      P:090E 44D91B            clr     b         x:(r1)+,x0              ; y
ind
2017      P:090F 000000            nop
2018      P:0910 45D900            move              x:(r1)+,x1              ; z
oom
2019      P:0911 2000A8            mpy     x0,x1,b
2020      P:0912 0607A0            rep     #7
2021      P:0913 20003A            asl     b
2022      P:0914 21063B            lsl     b         a0,y0
2023      P:0915 56F058            add     y0,b      x:xyoffi,a
                 000020
2024      P:0917 46F400            move              #>$ff,y0
                 0000FF
2025      P:0919 200056            and     y0,a
2026      P:091A 200033            lsl     a
2027      P:091B 200018            add     a,b
2028   
2029      P:091C 46D900            move              x:(r1)+,y0              ; t
ext_nr
2030      P:091D 47F400            move              #>$10000,y1
                 010000
2031      P:091F 2000B0            mpy     y0,y1,a
2032      P:0920 210E00            move              a0,a
2033      P:0921 200010            add     b,a
2034      P:0922 5E5800            move                          a,y:(r0)+   ;te
xt_offset
2035   
2036      P:0923 47F000            move              x:p_x1,y1
                 000010
2037   
2038      P:0925 4D5800            move                          x1,y:(r0)+  ;zo
om
2039   
2040      P:0926 2000A0            mpy     x0,x1,a
2041      P:0927 44F422            asr     a         #>$ffff,x0
                 00FFFF
2042      P:0929 210F00            move              a0,b
2043      P:092A 45F44E            and     x0,b      #>$7,x1
                 000007
2044      P:092C 5D5800            move                          b1,y:(r0)+  ;zo
om_offset
2045   
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 48



2046      P:092D 0A2095            jclr    #21,x:xyoffi,no_lightshade
                 00093E
2047      P:092F 56D900            move              x:(r1)+,a               ;en
tf
2048   
2049      P:0930 45F400            move              #>$ffc000,x1
                 FFC000
2050      P:0932 44F466            and     x1,a      #>$20000,x0
                 020000
2051      P:0934 200045            cmp     x0,a
2052      P:0935 0AF0A9            jlt     visible
                 000939
2053      P:0937 56F400            move              #>$1c000,a
                 01C000
2054      P:0939 0602A0  visible   rep     #2
2055      P:093A 200033            lsl     a
2056      P:093B 5E5800            move                          a,y:(r0)+
2057      P:093C 0AF080            jmp     ls_ok
                 000940
2058   
2059                     no_lightshade
2060      P:093E 45D913            clr     a         x:(r1)+,x1
2061      P:093F 5E5800            move                          a,y:(r0)+
2062   
2063                     ls_ok
2064      P:0940 45D900            move              x:(r1)+,x1              ;du
mmy (xyoffi)
2065   
2066                     next_text_go_on
2067      P:0941 000000            nop
2068   
2069                     no_text_in_strahl
2070      P:0942 44F400            move              #>-$1,x0
                 FFFFFF
2071      P:0944 4C5800            move                          x0,y:(r0)+
2072      P:0945 4C5C00            move                          x0,y:(r4)+
2073      P:0946 4C5F00            move                          x0,y:(r7)+
2074   
2075      P:0947 677000            move              r7,x:bild_boden_pos
                 00002D
2076      P:0949 647000            move              r4,x:bild_mask_pos
                 00002E
2077   
2078      P:094B 00000C            rts
2079   
2080                     next_text
2081      P:094C 222C00            move              r1,a1
2082      P:094D 44F400            move              #>$7,x0
                 000007
2083      P:094F 200040            add     x0,a
2084      P:0950 219100            move              a1,r1
2085   
2086      P:0951 0C0941            jmp     next_text_go_on
2087   
2088                     ;---------------
2089   
2090                     make_bild_boden
2091      P:0952 56D900            move              x:(r1)+,a               ;h2
2092      P:0953 200044            sub     x0,a
2093      P:0954 0AF0A3            jpl     mbe_b_ok
                 000957
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 49



2094      P:0956 200013            clr     a
2095                     mbe_b_ok
2096      P:0957 5E5F00            move                          a,y:(r7)+   ;db
ra
2097   
2098      P:0958 20EE00            move              y1,a                    ;y1
 = heigth - 1
2099      P:0959 46F044            sub     x0,a      x:true,y0
                 00000A
2100      P:095B 21C500            move              a,x1
2101      P:095C 2000E0            mpy     x1,y0,a
2102      P:095D 200022            asr     a
2103      P:095E 585F00            move                          a0,y:(r7)+  ;yo
ffset
2104   
2105      P:095F 44F400            move              #>3,x0
                 000003
2106      P:0961 222E00            move              r1,a
2107      P:0962 200040            add     x0,a
2108      P:0963 21D100            move              a,r1
2109   
2110      P:0964 000000            nop
2111   
2112      P:0965 44D900            move              x:(r1)+,x0              ;te
xt
2113      P:0966 4C5F00            move                          x0,y:(r7)+
2114   
2115      P:0967 44F400            move              #>2,x0
                 000002
2116      P:0969 222E00            move              r1,a
2117      P:096A 200040            add     x0,a
2118      P:096B 21D100            move              a,r1
2119   
2120      P:096C 000000            nop
2121   
2122      P:096D 0C0941            jmp     next_text_go_on
2123   
2124                     ;---------------
2125   
2126                     make_bild_mask
2127      P:096E 56D900            move              x:(r1)+,a               ;h2
2128      P:096F 200044            sub     x0,a
2129      P:0970 0AF0A3            jpl     mbe_m_ok
                 000973
2130      P:0972 200013            clr     a
2131                     mbe_m_ok
2132      P:0973 5E5C00            move                          a,y:(r4)+   ;db
ra
2133   
2134      P:0974 20EE00            move              y1,a                    ;y1
 = heigth - 1
2135      P:0975 46F044            sub     x0,a      x:true,y0
                 00000A
2136      P:0977 21C500            move              a,x1
2137      P:0978 2000E0            mpy     x1,y0,a
2138      P:0979 200022            asr     a
2139      P:097A 585C00            move                          a0,y:(r4)+  ;yo
ffset
2140   
2141      P:097B 56F000            move              x:xyoffi,a
                 000020
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 50



2142      P:097D 44F400            move              #>$00ff00,x0
                 00FF00
2143      P:097F 200046            and     x0,a
2144      P:0980 0608A0            rep     #8
2145      P:0981 200023            lsr     a
2146      P:0982 45D900            move              x:(r1)+,x1              ;xi
nd
2147      P:0983 44F460            add     x1,a      #>512,x0
                 000200
2148      P:0985 21C500            move              a,x1
2149      P:0986 2000A0            mpy     x0,x1,a
2150      P:0987 200022            asr     a
2151      P:0988 44D91B            clr     b         x:(r1)+,x0              ;yi
nd
2152      P:0989 000000            nop
2153      P:098A 45D900            move              x:(r1)+,x1              ;zo
om
2154      P:098B 2000A8            mpy     x0,x1,b
2155      P:098C 0607A0            rep     #7
2156      P:098D 20003A            asl     b
2157      P:098E 21063B            lsl     b         a0,y0
2158      P:098F 56F058            add     y0,b      x:xyoffi,a
                 000020
2159      P:0991 46F400            move              #>$ff,y0
                 0000FF
2160      P:0993 200056            and     y0,a
2161      P:0994 200033            lsl     a
2162      P:0995 200018            add     a,b
2163   
2164      P:0996 46D900            move              x:(r1)+,y0
2165      P:0997 47F400            move              #>$10000,y1
                 010000
2166      P:0999 2000B0            mpy     y0,y1,a
2167      P:099A 210E00            move              a0,a
2168      P:099B 200010            add     b,a
2169      P:099C 5E5C00            move                          a,y:(r4)+   ;te
xt_offset
2170   
2171      P:099D 47F000            move              x:p_x1,y1
                 000010
2172   
2173      P:099F 4D5C00            move                          x1,y:(r4)+  ;zo
om
2174   
2175      P:09A0 2000A0            mpy     x0,x1,a
2176      P:09A1 44F422            asr     a         #>$ffff,x0
                 00FFFF
2177      P:09A3 210F00            move              a0,b
2178      P:09A4 45F44E            and     x0,b      #>$7,x1
                 000007
2179      P:09A6 5D5C00            move                          b1,y:(r4)+  ;zo
om_offset
2180   
2181      P:09A7 0A2095            jclr    #21,x:xyoffi,no_lightshade_m
                 0009B8
2182      P:09A9 56D900            move              x:(r1)+,a               ;en
tf
2183      P:09AA 45F400            move              #>$ffc000,x1
                 FFC000
2184      P:09AC 44F466            and     x1,a      #>$20000,x0
                 020000
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 51



2185      P:09AE 200045            cmp     x0,a
2186      P:09AF 0AF0A9            jlt     visible_m
                 0009B3
2187      P:09B1 56F400            move              #>$1c000,a
                 01C000
2188      P:09B3 0602A0  visible_m rep     #2
2189      P:09B4 200033            lsl     a
2190      P:09B5 5E5C00            move                          a,y:(r4)+
2191      P:09B6 0AF080            jmp     ls_ok_m
                 0009BA
2192   
2193                     no_lightshade_m
2194      P:09B8 45D913            clr     a         x:(r1)+,x1
2195      P:09B9 5E5C00            move                          a,y:(r4)+
2196   
2197                     ls_ok_m
2198      P:09BA 45D900            move              x:(r1)+,x1              ;du
mmy (xyoffi)
2199   
2200      P:09BB 0C0941            jmp     next_text_go_on
2201   
2202                     ;******************************************************
****
2203   
2204                     init_system
2205      P:09BC 08F4A0            movep             #>$1,x:<<PBC
                 000001
2206      P:09BE 0AFA62            bset    #2,OMR                            ;Da
ta ROM Enable
2207   
2208      P:09BF 00000C            rts
2209   
2210                     ;******************************************************
****
2211   
2212      P:09C0 0AA980  cpu_read  jclr    #0,x:<<HSR,cpu_read
                 0009C0
2213      P:09C2 08452B            movep             x:<<HRX,x1
2214      P:09C3 00000C            rts
2215   
2216                     ;******************************************************
****
2217   
2218      P:09C4 0AA981  cpu_send  jclr    #1,x:<<HSR,cpu_send
                 0009C4
2219      P:09C6 08C62B            movep             y0,x:<<HRX
2220      P:09C7 00000C            rts
2221   
2222                     ;******************************************************
****
2223   
2224                     reset_dsp_datas
2225   
2226      P:09C8 44F400            move              #>monst_pts_offi,x0
                 0001C0
2227      P:09CA 447013            clr     a         x0,x:monsters_offi
                 000030
2228      P:09CC 567000            move              a,x:monsters_anz
                 00002F
2229      P:09CE 44F400            move              #>points_monsters,x0
                 000380
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 52



2230      P:09D0 447000            move              x0,x:mon_pts_ptr
                 000031
2231      P:09D2 44F400            move              #>monsters_lines,x0
                 000A40
2232      P:09D4 447000            move              x0,x:mon_line_ptr
                 000032
2233      P:09D6 44F400            move              #>monsters_breite,x0
                 002798
2234      P:09D8 447000            move              x0,x:mon_breite_ptr
                 000033
2235   
2236      P:09DA 44F400            move              #>things_pts_offi,x0
                 0004A0
2237      P:09DC 447013            clr     a         x0,x:things_offi
                 00003E
2238      P:09DE 567000            move              a,x:things_anz
                 00003D
2239      P:09E0 44F400            move              #>points_things,x0
                 0005C0
2240      P:09E2 447000            move              x0,x:things_pts_ptr
                 00003F
2241      P:09E4 44F400            move              #>things_lines,x0
                 000D60
2242      P:09E6 447000            move              x0,x:things_line_ptr
                 000040
2243   
2244      P:09E8 44F400            move              #>schalt_pts_offi,x0
                 000560
2245      P:09EA 447013            clr     a         x0,x:schalt_offi
                 00003A
2246      P:09EC 567000            move              a,x:schalt_anz
                 000039
2247      P:09EE 44F400            move              #>points_schalt,x0
                 000620
2248      P:09F0 447000            move              x0,x:schalt_pts_ptr
                 00003B
2249      P:09F2 44F400            move              #>schalt_lines,x0
                 000E50
2250      P:09F4 447000            move              x0,x:schalt_line_ptr
                 00003C
2251   
2252      P:09F6 44F400            move              #>doors_pts_offi,x0
                 000240
2253      P:09F8 447013            clr     a         x0,x:doors_offi
                 000036
2254      P:09FA 567000            move              a,x:doors_anz
                 000035
2255      P:09FC 44F400            move              #>points_doors,x0
                 0003C0
2256      P:09FE 447000            move              x0,x:doors_pts_ptr
                 000037
2257      P:0A00 44F400            move              #>doors_lines,x0
                 000AE0
2258      P:0A02 447000            move              x0,x:doors_line_ptr
                 000038
2259   
2260      P:0A04 00000C            rts
2261   
2262                     ;******************************************************
****
2263   
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 53



2264                     cpu_read_normal
2265      P:0A05 0AA980            jclr    #0,x:<<HSR,*
                 000A05
2266      P:0A07 084E2B            movep             x:<<HRX,a
2267      P:0A08 21C503            tst     a         a,x1
2268      P:0A09 0AF0A2            jne     extended_read
                 000A4D
2269   
2270                     normal_read
2271      P:0A0B 0AA980            jclr    #0,x:<<HSR,*
                 000A0B
2272      P:0A0D 084E2B            movep             x:<<HRX,a
2273      P:0A0E 0605A0            rep     #int_genau
2274      P:0A0F 200033            lsl     a
2275      P:0A10 567000            move              a,x:sx
                 000004
2276   
2277      P:0A12 0AA980            jclr    #0,x:<<HSR,*
                 000A12
2278      P:0A14 084E2B            movep             x:<<HRX,a
2279      P:0A15 0605A0            rep     #int_genau
2280      P:0A16 200033            lsl     a
2281      P:0A17 567000            move              a,x:sy
                 000005
2282   
2283      P:0A19 0AA980            jclr    #0,x:<<HSR,*
                 000A19
2284      P:0A1B 08452B            movep             x:<<HRX,x1
2285      P:0A1C 457000            move              x1,x:sh
                 000006
2286   
2287      P:0A1E 0AA980            jclr    #0,x:<<HSR,*
                 000A1E
2288      P:0A20 08452B            movep             x:<<HRX,x1
2289      P:0A21 457000            move              x1,x:alpha
                 000007
2290   
2291      P:0A23 0AA980            jclr    #0,x:<<HSR,*
                 000A23
2292      P:0A25 08452B            movep             x:<<HRX,x1
2293      P:0A26 457000            move              x1,x:width
                 000000
2294   
2295      P:0A28 0AA980            jclr    #0,x:<<HSR,*
                 000A28
2296      P:0A2A 08452B            movep             x:<<HRX,x1
2297      P:0A2B 457000            move              x1,x:heigth
                 000001
2298   
2299      P:0A2D 0AA980            jclr    #0,x:<<HSR,*
                 000A2D
2300      P:0A2F 08452B            movep             x:<<HRX,x1
2301      P:0A30 457000            move              x1,x:double_x
                 000009
2302   
2303      P:0A32 0AA980            jclr    #0,x:<<HSR,*
                 000A32
2304      P:0A34 08452B            movep             x:<<HRX,x1
2305      P:0A35 457000            move              x1,x:true
                 00000A
2306   
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 54



2307      P:0A37 0AA980            jclr    #0,x:<<HSR,*
                 000A37
2308      P:0A39 084F2B            movep             x:<<HRX,b               ; s
hoot
2309   
2310      P:0A3A 0AA980            jclr    #0,x:<<HSR,*
                 000A3A
2311      P:0A3C 08452B            movep             x:<<HRX,x1
2312      P:0A3D 457000            move              x1,x:time
                 00004F
2313   
2314                                                                         ; s
chussentfernung anpassen
2315   
2316      P:0A3F 0605A0            rep     #int_genau
2317      P:0A40 20003B            lsl     b
2318      P:0A41 577000            move              b,x:shoot
                 00000B
2319   
2320                                                                         ; h
eigth-werte berechnen
2321   
2322      P:0A43 56F000            move              x:heigth,a
                 000001
2323      P:0A45 200009            tfr     a,b
2324      P:0A46 44F423            lsr     a         #>1,x0
                 000001
2325      P:0A48 56704C            sub     x0,b      a,x:heigth_d2
                 000002
2326      P:0A4A 577000            move              b,x:heigth_m1
                 000003
2327   
2328   
2329      P:0A4C 00000C            rts
2330   
2331                     ;---------------
2332   
2333                     extended_read
2334      P:0A4D 0BC560            btst    #0,x1
2335      P:0A4E 0AF0A8            jcs     read_points_and_lines
                 000B5B
2336      P:0A50 0BC561            btst    #1,x1
2337      P:0A51 0AF0A8            jcs     read_init_data
                 000AEE
2338      P:0A53 0BC562            btst    #2,x1
2339      P:0A54 0AF0A8            jcs     read_tables
                 000B3E
2340      P:0A56 0BC563            btst    #3,x1
2341      P:0A57 0AF0A8            jcs     read_one_monster
                 000B0A
2342      P:0A59 0BC564            btst    #4,x1
2343      P:0A5A 0AF0A8            jcs     read_one_schalt
                 000A95
2344      P:0A5C 0BC565            btst    #5,x1
2345      P:0A5D 0AF0A8            jcs     read_one_door
                 000ABC
2346   
2347      P:0A5F 0BC567            btst    #7,x1
2348      P:0A60 0AF0A8            jcs     read_extended_lines
                 000B80
2349      P:0A62 0BC568            btst    #8,x1
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 55



2350      P:0A63 0AF0A8            jcs     read_extended_points
                 000B9C
2351      P:0A65 0BC569            btst    #9,x1
2352      P:0A66 0AF0A8            jcs     read_one_thing
                 000A69
2353   
2354      P:0A68 0C0A05            jmp     cpu_read_normal
2355   
2356                     ;---------------
2357   
2358                     read_one_thing
2359   
2360      P:0A69 60F000            move              x:things_pts_ptr,r0
                 00003F
2361      P:0A6B 61F000            move              x:things_line_ptr,r1
                 000040
2362      P:0A6D 56F000            move              x:things_offi,a
                 00003E
2363   
2364      P:0A6F 0AA980            jclr    #0,x:<<HSR,*
                 000A6F
2365      P:0A71 084F2B            movep             x:<<HRX,b
2366      P:0A72 0605A0            rep     #int_genau
2367      P:0A73 20003B            lsl     b
2368      P:0A74 575800            move              b,x:(r0)+
2369      P:0A75 0AA980            jclr    #0,x:<<HSR,*
                 000A75
2370      P:0A77 084F2B            movep             x:<<HRX,b
2371      P:0A78 0605A0            rep     #int_genau
2372      P:0A79 20003B            lsl     b
2373      P:0A7A 575800            move              b,x:(r0)+
2374   
2375      P:0A7B 46F400            move              #>2,y0
                 000002
2376      P:0A7D 565900            move              a,x:(r1)+
2377      P:0A7E 200050            add     y0,a
2378      P:0A7F 565900            move              a,x:(r1)+
2379      P:0A80 200050            add     y0,a
2380      P:0A81 567000            move              a,x:things_offi
                 00003E
2381   
2382      P:0A83 060380            do      #3,read_t_l_loop
                 000A88
2383   
2384      P:0A85 0AA980            jclr    #0,x:<<HSR,*
                 000A85
2385      P:0A87 08452B            movep             x:<<HRX,x1
2386      P:0A88 455900            move              x1,x:(r1)+
2387                     read_t_l_loop
2388   
2389      P:0A89 56F000            move              x:things_anz,a
                 00003D
2390      P:0A8B 44F400            move              #>1,x0
                 000001
2391      P:0A8D 200040            add     x0,a
2392      P:0A8E 567000            move              a,x:things_anz
                 00003D
2393   
2394      P:0A90 607000            move              r0,x:things_pts_ptr
                 00003F
2395      P:0A92 617000            move              r1,x:things_line_ptr
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 56



                 000040
2396   
2397      P:0A94 0C0A05            jmp     cpu_read_normal
2398   
2399                     ;---------------
2400   
2401                     read_one_schalt
2402   
2403      P:0A95 60F000            move              x:schalt_pts_ptr,r0
                 00003B
2404      P:0A97 61F000            move              x:schalt_line_ptr,r1
                 00003C
2405      P:0A99 56F000            move              x:schalt_offi,a
                 00003A
2406   
2407      P:0A9B 060480            do      #4,ros_loop
                 000AA2
2408      P:0A9D 0AA980            jclr    #0,x:<<HSR,*
                 000A9D
2409      P:0A9F 084F2B            movep             x:<<HRX,b
2410      P:0AA0 0605A0            rep     #int_genau
2411      P:0AA1 20003B            lsl     b
2412      P:0AA2 575800            move              b,x:(r0)+
2413                     ros_loop
2414   
2415      P:0AA3 46F400            move              #>2,y0
                 000002
2416      P:0AA5 565900            move              a,x:(r1)+
2417      P:0AA6 200050            add     y0,a
2418      P:0AA7 565900            move              a,x:(r1)+
2419      P:0AA8 200050            add     y0,a
2420      P:0AA9 567000            move              a,x:schalt_offi
                 00003A
2421   
2422      P:0AAB 060380            do      #3,ros_line_loop
                 000AB0
2423   
2424      P:0AAD 0AA980            jclr    #0,x:<<HSR,*
                 000AAD
2425      P:0AAF 08452B            movep             x:<<HRX,x1
2426      P:0AB0 455900            move              x1,x:(r1)+
2427                     ros_line_loop
2428   
2429      P:0AB1 56F000            move              x:schalt_anz,a
                 000039
2430      P:0AB3 44F400            move              #>1,x0
                 000001
2431      P:0AB5 607040            add     x0,a      r0,x:schalt_pts_ptr
                 00003B
2432      P:0AB7 567000            move              a,x:schalt_anz
                 000039
2433      P:0AB9 617000            move              r1,x:schalt_line_ptr
                 00003C
2434   
2435      P:0ABB 0C0A05            jmp     cpu_read_normal
2436   
2437                     ;---------------
2438   
2439                     read_one_door
2440   
2441      P:0ABC 60F000            move              x:doors_pts_ptr,r0
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 57



                 000037
2442      P:0ABE 61F000            move              x:doors_line_ptr,r1
                 000038
2443      P:0AC0 46F000            move              x:doors_offi,y0
                 000036
2444   
2445      P:0AC2 060880            do      #8,door_read_pts
                 000AC9
2446   
2447      P:0AC4 0AA980            jclr    #0,x:<<HSR,*
                 000AC4
2448      P:0AC6 084E2B            movep             x:<<HRX,a
2449      P:0AC7 0605A0            rep     #int_genau
2450      P:0AC8 200033            lsl     a
2451      P:0AC9 565800            move              a,x:(r0)+
2452                     door_read_pts
2453   
2454      P:0ACA 060480            do      #4,door_lpts_loop
                 000ADC
2455   
2456      P:0ACC 0AA980            jclr    #0,x:<<HSR,*
                 000ACC
2457      P:0ACE 084E2B            movep             x:<<HRX,a
2458      P:0ACF 200050            add     y0,a
2459      P:0AD0 565900            move              a,x:(r1)+
2460      P:0AD1 0AA980            jclr    #0,x:<<HSR,*
                 000AD1
2461      P:0AD3 084E2B            movep             x:<<HRX,a
2462      P:0AD4 200050            add     y0,a
2463      P:0AD5 565900            move              a,x:(r1)+
2464   
2465      P:0AD6 060380            do      #3,door_read_line
                 000ADB
2466   
2467      P:0AD8 0AA980            jclr    #0,x:<<HSR,*
                 000AD8
2468      P:0ADA 08452B            movep             x:<<HRX,x1
2469      P:0ADB 455900            move              x1,x:(r1)+
2470                     door_read_line
2471      P:0ADC 000000            nop
2472                     door_lpts_loop
2473   
2474      P:0ADD 56F400            move              #>8,a
                 000008
2475      P:0ADF 200050            add     y0,a
2476      P:0AE0 567000            move              a,x:doors_offi
                 000036
2477   
2478      P:0AE2 56F000            move              x:doors_anz,a
                 000035
2479      P:0AE4 44F400            move              #>1,x0
                 000001
2480      P:0AE6 200040            add     x0,a
2481      P:0AE7 567000            move              a,x:doors_anz
                 000035
2482   
2483      P:0AE9 607000            move              r0,x:doors_pts_ptr
                 000037
2484      P:0AEB 617000            move              r1,x:doors_line_ptr
                 000038
2485   
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 58



2486      P:0AED 0C0A05            jmp     cpu_read_normal
2487   
2488                     ;---------------
2489   
2490                     read_init_data
2491   
2492      P:0AEE 0D09C0            jsr     cpu_read
2493      P:0AEF 457000            move              x1,x:sky_zoom
                 000045
2494      P:0AF1 0D09C0            jsr     cpu_read
2495      P:0AF2 457000            move              x1,x:sky_xyoffi
                 000046
2496      P:0AF4 0D09C0            jsr     cpu_read
2497      P:0AF5 457000            move              x1,x:sky_text
                 000047
2498      P:0AF7 0D09C0            jsr     cpu_read
2499      P:0AF8 457000            move              x1,x:sky_and_maske
                 000048
2500   
2501      P:0AFA 0D09C0            jsr     cpu_read
2502      P:0AFB 457000            move              x1,x:sht_line_1
                 000049
2503      P:0AFD 0D09C0            jsr     cpu_read
2504      P:0AFE 457000            move              x1,x:sht_line_3
                 00004A
2505      P:0B00 0D09C0            jsr     cpu_read
2506      P:0B01 457000            move              x1,x:sht_line_3+1
                 00004B
2507      P:0B03 0D09C0            jsr     cpu_read
2508      P:0B04 457000            move              x1,x:sht_line_3+2
                 00004C
2509      P:0B06 0D09C0            jsr     cpu_read
2510      P:0B07 457000            move              x1,x:sht_line_3+3
                 00004D
2511   
2512      P:0B09 0C0A05            jmp     cpu_read_normal
2513   
2514                     ;---------------
2515   
2516                     read_one_monster
2517   
2518      P:0B0A 60F000            move              x:mon_pts_ptr,r0
                 000031
2519      P:0B0C 61F000            move              x:mon_line_ptr,r1
                 000032
2520      P:0B0E 62F000            move              x:mon_breite_ptr,r2
                 000033
2521      P:0B10 56F000            move              x:monsters_offi,a
                 000030
2522   
2523      P:0B12 0AA980            jclr    #0,x:<<HSR,*
                 000B12
2524      P:0B14 084F2B            movep             x:<<HRX,b
2525      P:0B15 0605A0            rep     #int_genau
2526      P:0B16 20003B            lsl     b
2527      P:0B17 575800            move              b,x:(r0)+
2528      P:0B18 0AA980            jclr    #0,x:<<HSR,*
                 000B18
2529      P:0B1A 084F2B            movep             x:<<HRX,b
2530      P:0B1B 0605A0            rep     #int_genau
2531      P:0B1C 20003B            lsl     b
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 59



2532      P:0B1D 575800            move              b,x:(r0)+
2533   
2534      P:0B1E 46F400            move              #>2,y0
                 000002
2535      P:0B20 565900            move              a,x:(r1)+
2536      P:0B21 200050            add     y0,a
2537      P:0B22 565900            move              a,x:(r1)+
2538      P:0B23 200050            add     y0,a
2539      P:0B24 567000            move              a,x:monsters_offi
                 000030
2540   
2541      P:0B26 060380            do      #3,read_m_l_loop
                 000B2B
2542      P:0B28 0AA980            jclr    #0,x:<<HSR,*
                 000B28
2543      P:0B2A 08452B            movep             x:<<HRX,x1
2544      P:0B2B 455900            move              x1,x:(r1)+
2545                     read_m_l_loop
2546   
2547      P:0B2C 0AA980            jclr    #0,x:<<HSR,*
                 000B2C
2548      P:0B2E 08452B            movep             x:<<HRX,x1
2549      P:0B2F 455A00            move              x1,x:(r2)+              ; m
onsters_breite
2550   
2551      P:0B30 56F000            move              x:monsters_anz,a
                 00002F
2552      P:0B32 44F400            move              #>1,x0
                 000001
2553      P:0B34 200040            add     x0,a
2554      P:0B35 567000            move              a,x:monsters_anz
                 00002F
2555   
2556      P:0B37 607000            move              r0,x:mon_pts_ptr
                 000031
2557      P:0B39 617000            move              r1,x:mon_line_ptr
                 000032
2558      P:0B3B 627000            move              r2,x:mon_breite_ptr
                 000033
2559   
2560      P:0B3D 0C0A05            jmp     cpu_read_normal
2561   
2562                     ;---------------
2563   
2564                     read_tables
2565      P:0B3E 0AA980            jclr    #0,x:<<HSR,*
                 000B3E
2566      P:0B40 084E2B            movep             x:<<HRX,a
2567      P:0B41 0605A0            rep     #int_genau
2568      P:0B42 200033            lsl     a
2569      P:0B43 567000            move              a,x:per
                 000008
2570   
2571      P:0B45 0AA980            jclr    #0,x:<<HSR,*
                 000B45
2572      P:0B47 08452B            movep             x:<<HRX,x1
2573      P:0B48 60F400            move              #>winkel_320_tab,r0
                 002518
2574   
2575      P:0B4A 20A600            move              x1,y0
2576   
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 60



2577      P:0B4B 06C600            do      y0,read_winkel_320_tab
                 000B50
2578   
2579      P:0B4D 0AA980            jclr    #0,x:<<HSR,*
                 000B4D
2580      P:0B4F 08452B            movep             x:<<HRX,x1
2581      P:0B50 455800            move              x1,x:(r0)+
2582   
2583                     read_winkel_320_tab
2584   
2585      P:0B51 60F400            move              #>tangens_tab,r0
                 002658
2586   
2587      P:0B53 06C600            do      y0,read_tangens_tab
                 000B58
2588   
2589      P:0B55 0AA980            jclr    #0,x:<<HSR,*
                 000B55
2590      P:0B57 08452B            movep             x:<<HRX,x1
2591      P:0B58 455800            move              x1,x:(r0)+
2592   
2593                     read_tangens_tab
2594   
2595      P:0B59 000000            nop
2596   
2597      P:0B5A 0C0A05            jmp     cpu_read_normal
2598   
2599                     ;---------------
2600   
2601                     read_points_and_lines
2602   
2603      P:0B5B 0AA980            jclr    #0,x:<<HSR,*
                 000B5B
2604      P:0B5D 08452B            movep             x:<<HRX,x1
2605      P:0B5E 457000            move              x1,x:points_anz
                 000022
2606   
2607      P:0B60 20AE00            move              x1,a
2608      P:0B61 200033            lsl     a
2609      P:0B62 21C500            move              a,x1
2610   
2611      P:0B63 60F400            move              #>points,r0
                 000200
2612   
2613      P:0B65 06C500            do      x1,read_points_loop
                 000B6C
2614   
2615      P:0B67 0AA980            jclr    #0,x:<<HSR,*
                 000B67
2616      P:0B69 084E2B            movep             x:<<HRX,a
2617      P:0B6A 0605A0            rep     #int_genau
2618      P:0B6B 200033            lsl     a
2619      P:0B6C 565800            move              a,x:(r0)+
2620                     read_points_loop
2621   
2622      P:0B6D 0AA980            jclr    #0,x:<<HSR,*
                 000B6D
2623      P:0B6F 08452B            movep             x:<<HRX,x1
2624      P:0B70 457000            move              x1,x:lines_anz
                 000023
2625   
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 61



2626      P:0B72 20AE00            move              x1,a
2627      P:0B73 200033            lsl     a
2628      P:0B74 200033            lsl     a
2629      P:0B75 200060            add     x1,a
2630      P:0B76 21C500            move              a,x1
2631   
2632      P:0B77 60F400            move              #>lines,r0
                 000680
2633   
2634      P:0B79 06C500            do      x1,read_lines_loop
                 000B7E
2635   
2636      P:0B7B 0AA980            jclr    #0,x:<<HSR,*
                 000B7B
2637      P:0B7D 08452B            movep             x:<<HRX,x1
2638      P:0B7E 455800            move              x1,x:(r0)+
2639                     read_lines_loop
2640   
2641      P:0B7F 0C0A05            jmp     cpu_read_normal
2642   
2643                     ;---------------
2644   
2645                     read_extended_lines
2646   
2647      P:0B80 56F000            move              x:lines_anz,a
                 000023
2648   
2649      P:0B82 0AA980            jclr    #0,x:<<HSR,*
                 000B82
2650      P:0B84 08452B            movep             x:<<HRX,x1
2651      P:0B85 21CF60            add     x1,a      a,b
2652      P:0B86 567000            move              a,x:lines_anz
                 000023
2653   
2654      P:0B88 20AE00            move              x1,a
2655      P:0B89 200033            lsl     a
2656      P:0B8A 200033            lsl     a
2657      P:0B8B 200060            add     x1,a
2658      P:0B8C 21C500            move              a,x1
2659   
2660      P:0B8D 60F400            move              #>lines,r0
                 000680
2661      P:0B8F 21E43B            lsl     b         b,x0
2662      P:0B90 20003B            lsl     b
2663      P:0B91 200048            add     x0,b
2664      P:0B92 220E00            move              r0,a
2665      P:0B93 200010            add     b,a
2666      P:0B94 21D000            move              a,r0
2667   
2668      P:0B95 06C500            do      x1,read_exlin_loop
                 000B9A
2669   
2670      P:0B97 0AA980            jclr    #0,x:<<HSR,*
                 000B97
2671      P:0B99 08452B            movep             x:<<HRX,x1
2672      P:0B9A 455800            move              x1,x:(r0)+
2673                     read_exlin_loop
2674   
2675      P:0B9B 0C0A05            jmp     cpu_read_normal
2676   
2677                     ;---------------
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 62



2678   
2679                     read_extended_points
2680   
2681      P:0B9C 0AA980            jclr    #0,x:<<HSR,*
                 000B9C
2682      P:0B9E 08452B            movep             x:<<HRX,x1
2683      P:0B9F 56F000            move              x:points_anz,a
                 000022
2684      P:0BA1 21CF60            add     x1,a      a,b
2685      P:0BA2 567000            move              a,x:points_anz
                 000022
2686   
2687      P:0BA4 20AE00            move              x1,a
2688      P:0BA5 200033            lsl     a
2689      P:0BA6 21C500            move              a,x1
2690   
2691      P:0BA7 56F400            move              #>points,a
                 000200
2692      P:0BA9 20003B            lsl     b
2693      P:0BAA 200010            add     b,a
2694      P:0BAB 21D000            move              a,r0
2695   
2696      P:0BAC 06C500            do      x1,read_ext_points_l
                 000BB3
2697   
2698      P:0BAE 0AA980            jclr    #0,x:<<HSR,*
                 000BAE
2699      P:0BB0 084E2B            movep             x:<<HRX,a
2700      P:0BB1 0605A0            rep     #int_genau
2701      P:0BB2 200033            lsl     a
2702      P:0BB3 565800            move              a,x:(r0)+
2703                     read_ext_points_l
2704   
2705      P:0BB4 0C0A05            jmp     cpu_read_normal
2706   
2707   
2708                     ;******************************************************
****
2709   
2710                     cpu_send_info
2711      P:0BB5 56F000            move              x:min_entf,a
                 000034
2712      P:0BB7 0605A0            rep     #int_genau
2713      P:0BB8 200023            lsr     a
2714      P:0BB9 21C600            move              a,y0
2715      P:0BBA 0D09C4            jsr     cpu_send
2716   
2717      P:0BBB 46F000            move              x:masked_anz,y0
                 000041
2718      P:0BBD 0D09C4            jsr     cpu_send
2719      P:0BBE 00000C            rts
2720   
2721                     ;---------------
2722   
2723                     cpu_send_new_info
2724      P:0BBF 46F000            move              x:monsters_anz,y0
                 00002F
2725      P:0BC1 0D09C4            jsr     cpu_send
2726   
2727      P:0BC2 20CE00            move              y0,a
2728      P:0BC3 200003            tst     a
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 63



2729      P:0BC4 0AF0AA            jeq     no_sending
                 000BCD
2730   
2731      P:0BC6 67F400            move              #>monsters_flags,r7
                 0027B8
2732   
2733      P:0BC8 06C600            do      y0,no_sending
                 000BCC
2734   
2735      P:0BCA 46DF00            move              x:(r7)+,y0
2736      P:0BCB 0D09C4            jsr     cpu_send
2737   
2738      P:0BCC 000000            nop
2739   
2740                     no_sending
2741      P:0BCD 000000            nop
2742   
2743      P:0BCE 00000C            rts
2744   
2745                     ;******************************************************
****
2746   
2747                     cpu_send_bild
2748      P:0BCF 220E00            move              r0,a
2749      P:0BD0 44F400            move              #>bild,x0
                 000C90
2750      P:0BD2 45F444            sub     x0,a      #>b_text_max,x1
                 001870
2751      P:0BD4 21C665            cmp     x1,a      a,y0
2752      P:0BD5 0AF0A7            jgt     bild_error
                 000C04
2753   
2754      P:0BD7 0D09C4            jsr     cpu_send
2755   
2756      P:0BD8 60F400            move              #>bild,r0
                 000C90
2757   
2758      P:0BDA 06C600            do      y0,send_bytes
                 000BDF
2759      P:0BDC 4ED800            move                          y:(r0)+,y0
2760      P:0BDD 0AA981  send_wait jclr    #1,x:<<HSR,send_wait
                 000BDD
2761      P:0BDF 08C62B            movep             y0,x:<<HRX
2762                     send_bytes
2763   
2764      P:0BE0 44F400            move              #>bild_boden,x0
                 002500
2765      P:0BE2 56F000            move              x:bild_boden_pos,a
                 00002D
2766      P:0BE4 209044            sub     x0,a      x0,r0
2767      P:0BE5 45F400            move              #>b_boden_max,x1
                 001200
2768      P:0BE7 21C665            cmp     x1,a      a,y0
2769      P:0BE8 0AF0A7            jgt     bild_error
                 000C04
2770   
2771      P:0BEA 0D09C4            jsr     cpu_send
2772   
2773      P:0BEB 06C600            do      y0,send_bytes_b
                 000BF0
2774      P:0BED 4ED800            move                          y:(r0)+,y0
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 64



2775                     send_wait_b
2776      P:0BEE 0AA981            jclr    #1,x:<<HSR,send_wait_b
                 000BEE
2777      P:0BF0 08C62B            movep             y0,x:<<HRX
2778                     send_bytes_b
2779   
2780      P:0BF1 44F400            move              #>bild_mask,x0
                 003700
2781      P:0BF3 56F000            move              x:bild_mask_pos,a
                 00002E
2782      P:0BF5 209044            sub     x0,a      x0,r0
2783      P:0BF6 45F400            move              #>b_mask_max,x1
                 000800
2784      P:0BF8 21C665            cmp     x1,a      a,y0
2785      P:0BF9 0AF0A7            jgt     bild_error
                 000C04
2786   
2787      P:0BFB 0D09C4            jsr     cpu_send
2788   
2789      P:0BFC 06C600            do      y0,send_bytes_m
                 000C01
2790      P:0BFE 4ED800            move                          y:(r0)+,y0
2791                     send_wait_m
2792      P:0BFF 0AA981            jclr    #1,x:<<HSR,send_wait_m
                 000BFF
2793      P:0C01 08C62B            movep             y0,x:<<HRX
2794                     send_bytes_m
2795   
2796      P:0C02 000000            nop
2797   
2798      P:0C03 00000C            rts
2799   
2800                     ;--------
2801   
2802                     bild_error
2803      P:0C04 46F400            move              #>-$1,y0
                 FFFFFF
2804      P:0C06 0D09C4            jsr     cpu_send
2805   
2806      P:0C07 000000            nop
2807   
2808      P:0C08 00000C            rts
2809   
2810                     programm_end_adress
2811   
2812                     ;******************************************************
****
2813   
2814   
2815                     ;******************************************************
****
2816                     ;***
2817                     ;***            X-Speicher
2818                     ;***
2819                     ;******************************************************
****
2820   
2821                     ;*** $100 - $1ff ist fr Tangens-Tabelle reserviert ...
2822   
2823      X:0000                   org     x:$0
2824   
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 65



2825      X:0000         width     dc      16
2826      X:0001         heigth    dc      10
2827      X:0002         heigth_d2 dc      0
2828      X:0003         heigth_m1 dc      0
2829   
2830      X:0004         sx        dc      $543                              ;St
andort (x,y,Hhe,Sichtwinkel)
2831      X:0005         sy        dc      $23d
2832      X:0006         sh        dc      $130
2833      X:0007         alpha     dc      $be
2834   
2835      X:0008         per       dc      44234                             ;Sk
alierungsfaktor Y-Richtung
2836      X:0009         double_x  dc      0                                 ;Fl
ag fr Double-Pix
2837      X:000A         true      dc      0
2838      X:000B         shoot     dc      0
2839   
2840                     one_mon_hit
2841      X:000C                   dc      0
2842                     mon_line_flag
2843      X:000D                   dc      0
2844   
2845                     koll_counter
2846      X:000E                   dc      0
2847                     make_counter
2848      X:000F                   dc      0
2849   
2850      X:0010         p_x1      dc      0                                 ;Zw
ischenspeicher
2851      X:0011         p_x2      dc      0
2852      X:0012         p_y1      dc      0
2853      X:0013         p_y2      dc      0
2854      X:0014         p_dx      dc      0
2855      X:0015         p_dy      dc      0
2856   
2857      X:0016         c_heigth  dc      0
2858   
2859      X:0017         prev_h1   dc      0
2860      X:0018         prev_h2   dc      0
2861   
2862      X:0019         h1        dc      0                                 ;fu
er make_entry
2863      X:001A         h2        dc      0
2864      X:001B         xind      dc      0
2865      X:001C         yind      dc      0
2866      X:001D         zoom      dc      0
2867      X:001E         text      dc      0
2868      X:001F         entf      dc      0
2869      X:0020         xyoffi    dc      0
2870   
2871      X:0021         flag      dc      0
2872   
2873      X:0022         points_anz dc     4
2874      X:0023         lines_anz dc      4
2875                     calc_l_i_anz
2876      X:0024                   dc      0
2877                     calc_l_ii_anz
2878      X:0025                   dc      0
2879   
2880      X:0026         point1    dc      0                                 ;fu
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 66



er part_kollision
2881      X:0027         point2    dc      0                                 ;(Z
wischenspeicher)
2882                     line_flag_1
2883      X:0028                   dc      0
2884                     line_flag_2
2885      X:0029                   dc      0
2886                     line_flag_3
2887      X:002A                   dc      0
2888   
2889                     strahl_buffer_free
2890      X:002B                   dc      0                                 ;fu
er make_entry
2891                     strahl_buffer_anz
2892      X:002C                   dc      0
2893   
2894                     bild_boden_pos
2895      X:002D                   dc      0                                 ;wi
e zwei zusaetzliche
2896                     bild_mask_pos
2897      X:002E                   dc      0                                 ;Ad
reregister ...
2898   
2899                     monsters_anz
2900      X:002F                   dc      0
2901                     monsters_offi
2902      X:0030                   dc      0
2903                     mon_pts_ptr
2904      X:0031                   dc      0
2905                     mon_line_ptr
2906      X:0032                   dc      0
2907                     mon_breite_ptr
2908      X:0033                   dc      0
2909   
2910      X:0034         min_entf  dc      0
2911   
2912      X:0035         doors_anz dc      0
2913      X:0036         doors_offi dc     0
2914                     doors_pts_ptr
2915      X:0037                   dc      0
2916                     doors_line_ptr
2917      X:0038                   dc      0
2918   
2919      X:0039         schalt_anz dc     0
2920                     schalt_offi
2921      X:003A                   dc      0
2922                     schalt_pts_ptr
2923      X:003B                   dc      0
2924                     schalt_line_ptr
2925      X:003C                   dc      0
2926   
2927      X:003D         things_anz dc     0
2928                     things_offi
2929      X:003E                   dc      0
2930                     things_pts_ptr
2931      X:003F                   dc      0
2932                     things_line_ptr
2933      X:0040                   dc      0
2934   
2935      X:0041         masked_anz dc     0
2936      X:0042         sort_i    dc      0
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 67



2937      X:0043         sort_j    dc      0
2938      X:0044         sort_wert dc      0
2939   
2940      X:0045         sky_zoom  dc      0
2941      X:0046         sky_xyoffi dc     0
2942      X:0047         sky_text  dc      0
2943                     sky_and_maske
2944      X:0048                   dc      0
2945   
2946      X:0049         sht_line_1 dc     0
2947      X:004A         sht_line_3 dc     0,0,0,0
2948                     sht_anim_pos
2949      X:004E                   dc      0
2950   
2951      X:004F         time      dc      0
2952   
2953                     entfernung_max
2954      X:0050                   dc      0
2955   
2956   
2957      X:0200                   org     x:$200
2958   
2959      X:0200         points    ds      points_max*2
2960                     points_monsters
2961      X:0380                   ds      monsters_max*2
2962                     points_doors
2963      X:03C0                   ds      doors_max*16
2964                     points_things
2965      X:05C0                   ds      things_max*2
2966                     points_schalt
2967      X:0620                   ds      schalt_max*4
2968   
2969                     ;       line_flag_1:  23..16 15..8 7..0
2970   
2971                     ;                7...0: h1 (0..255)
2972                     ;               15...8: text_and_maske (0..255)
2973                     ;               19..16: texture_nr_front (0..15) (textu
rnummer vorderseite)
2974                     ;               23..29: texture_nr_back (0..15) (textur
nummer rueckseite)
2975   
2976                     ;       line_flag_2:  23..16 15..8 7..0
2977   
2978                     ;                7...0: h2 (0..255)
2979                     ;                    8: visi_front (1 = vorderseite sic
htbar)
2980                     ;                    9: visi_back (1 = rueckseite sicht
bar)
2981                     ;                   10: oben_decke (1 = true)
2982                     ;                   11: unten_decke (1 = true)
2983                     ;                   12: decke_ist_himmel (1 = true)
2984                     ;                   13: backside ist normale textur (1 
= true)
2985                     ;                   14: masked_texture (1 = textur mu 
maskiert werden)
2986                     ;                       (z.b. monster, gegner, gitterst
be ...)
2987                     ;                   15: lightshading on/off
2988                     ;               23..16: normw (0..255)
2989   
2990                     ;       line_flag_3:  23..16 15..8 7..0
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 68



2991   
2992                     ;                7...0: x_offset (0..255)
2993                     ;               15...8: y_offset (0..255)
2994                     ;               23..16: text_width (0..255) Faktor 4 (d
.h. $01 = 4)
2995   
2996      X:0680         lines     ds      lines_max*5
2997                     monsters_lines
2998      X:0A40                   ds      monsters_max*5
2999                     doors_lines
3000      X:0AE0                   ds      doors_max*20
3001                     things_lines
3002      X:0D60                   ds      things_max*5
3003                     schalt_lines
3004      X:0E50                   ds      schalt_max*5
3005   
3006                     calc_points
3007      X:0EC8                   ds      points_max*2
3008                     calc_points_m
3009      X:1048                   ds      monsters_max*2
3010                     calc_points_mm
3011      X:1088                   ds      monsters_max*4
3012                     calc_points_d
3013      X:1108                   ds      doors_max*16
3014                     calc_points_g
3015      X:1308                   ds      things_max*2
3016                     calc_points_gg
3017      X:1368                   ds      things_max*4
3018                     calc_points_s
3019      X:1428                   ds      schalt_max*4
3020   
3021                     calc_lines_i
3022      X:1488                   ds      lines_max*5
3023      X:1848                   ds      monsters_max*5
3024      X:18E8                   ds      doors_max*20
3025      X:1B68                   ds      things_max*5
3026      X:1C58                   ds      schalt_max*5
3027                     calc_lines_ii
3028      X:1CD0                   ds      lines_max*5
3029      X:2090                   ds      monsters_max*5
3030      X:2130                   ds      doors_max*20
3031      X:23B0                   ds      things_max*5
3032      X:24A0                   ds      schalt_max*5
3033   
3034                     winkel_320_tab
3035      X:2518                   ds      320
3036                     tangens_tab
3037      X:2658                   ds      320
3038   
3039                     monsters_breite
3040      X:2798                   ds      monsters_max
3041                     monsters_flags
3042      X:27B8                   ds      monsters_max
3043   
3044      X:27D8         stack_anz dc      0
3045      X:27D9         stack_max dc      stack_lines_max
3046      X:27DA         stack     ds      stack_lines_max*8
3047   
3048                     reg_retten
3049                     strahl_buffer
3050      X:28DA                   ds      60*8
Motorola DSP56000 Assembler  Version 4.1.1   97-09-05  23:33:34  run_v501.asm
  Page 69



3051   
3052   
3053                     ;******************************************************
****
3054                     ;***
3055                     ;***            Y-Speicher
3056                     ;***
3057                     ;******************************************************
****
3058   
3059                     ;*** Take care: der Y-Speicher mu um die Groesse des
3060                     ;*** Programmspeichers erhoeht werden ...
3061                     ;*** $100 - $1ff ist fuer Sinus-Tabelle reserviert ...
3062   
3063      Y:0C90                   org     y:$c90
3064   
3065      Y:0C90         bild      ds      b_text_max
3066      Y:2500         bild_boden ds     b_boden_max
3067      Y:3700         bild_mask ds      b_mask_max
3068   
3069   
3070   
3071                               end

0    Errors
0    Warnings
